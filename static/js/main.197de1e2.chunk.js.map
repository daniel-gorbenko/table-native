{"version":3,"sources":["components/page-create-table/page-create-table.js","components/cell/cell.js","components/row/row.js","components/percent-cell/percent-cell.js","components/table-row-percent-cell/table-row-percent-cell.js","components/sum-cell/sum-cell.js","components/table-row-sum-cell/table-row-sum-cell.js","components/table-row/table-row.js","components/table/table.js","components/page-table/page-table.js","components/app/app.js","index.js"],"names":["PageCreateTable","props","react_default","a","createElement","className","onSubmit","onChange","e","value","values","rows","type","placeholder","cols","x","Cell","onClick","onMouseEnter","onMouseOver","onMouseLeave","onMouseOut","children","Row","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextProps","changed","React","Component","PercentCell","higlight","over","join","style","height","percentValue","cell_cell","TableRowPercentCell","amount","_this","percent_cell","getPercent","rowIndex","onCellClick","colIndex","onCellOver","onCellOut","SumCell","onRowRemove","TableRowSumCell","sum_cell","onSumCellOver","index","onSumCellOut","sumCellValue","TableRow","cells","map","cell","table_row_percent_cell","key","table_row_sum_cell","Table","_React$Component","calcSumByRow","state","table","toFixed","onRowAdd","preventDefault","setState","toConsumableArray","length","generateRowData","rowIdList","getNextRowId","rowChanges","sums","getSums","row","splice","i","l","markChangedRows","amountDigitsIndex","amountDigits","higlighted","_currentRowId","generateTableData","bind","assertThisInitialized","inherits","createClass","j","generateCellData","y","id","concat","generateAmount","parseInt","Math","random","toString","substring","getRowsSums","getColsSums","rowsCount","colsCount","calcSumByCol","tbl","sumByRow","col","sumByCol","_this2","newTableState","assign","unHiglightProcess","higlightProcess","_this3","_this4","cellRow","cellCol","cellSelected","sortedCells","reduce","forEach","push","amountDiff","abs","sort","b","sortedCellsLength","selected","higlightedLength","table_row","s","href","row_row","sum","unmarkChangedRows","PageTable","table_table","App","togglePage","page","name","defineProperty","target","cb","page_create_table","page_table","ReactDOM","render","app","document","getElementById"],"mappings":"gPAkBeA,EAhBS,SAACC,GACvB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,+GAEAF,EAAAC,EAAAC,cAAA,QAAME,SAAUL,EAAMK,UACpBJ,EAAAC,EAAAC,cAAA,SAAOG,SAAU,SAACC,GAAD,OAAOP,EAAMM,SAASC,EAAG,SAASC,MAAOR,EAAMS,OAAOC,KAAMC,KAAK,SAASC,YAAY,2IACvGX,EAAAC,EAAAC,cAAA,SAAOG,SAAU,SAACC,GAAD,OAAOP,EAAMM,SAASC,EAAG,SAASC,MAAOR,EAAMS,OAAOI,KAAMF,KAAK,SAASC,YAAY,6JACvGX,EAAAC,EAAAC,cAAA,SAAOG,SAAU,SAACC,GAAD,OAAOP,EAAMM,SAASC,EAAG,MAAMC,MAAOR,EAAMS,OAAOK,EAAGH,KAAK,SAASC,YAAY,gFAEjGX,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,SAASH,MAAM,4ECArBO,EAVH,SAACf,GACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAMI,UACjBY,QAAShB,EAAMgB,QACfC,aAAcjB,EAAMkB,YACpBC,aAAcnB,EAAMoB,YACnBnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUJ,EAAMQ,OAC/BR,EAAMqB,WCgBNC,cArBb,SAAAA,EAAYtB,GAAQ,OAAAuB,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,KACZzB,uFAGc6B,GACpB,OAAOA,EAAUC,yCAIjB,OACE7B,EAAAC,EAAAC,cAAA,UAAKsB,KAAKzB,MAAMqB,iBAXJU,IAAMC,WC+BTC,cA5Bb,SAAAA,EAAYjC,GAAQ,OAAAuB,OAAAC,EAAA,EAAAD,CAAAE,KAAAQ,GAAAV,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAU,GAAAL,KAAAH,KACZzB,0EAIN,IAKII,EALU,CACZqB,KAAKzB,MAAMkC,SAAW,WAAa,GACnCT,KAAKzB,MAAMmC,KAAO,OAAS,IAGLC,KAAK,KAEzBC,EAAQ,CACVC,OAAQb,KAAKzB,MAAMuC,aAAe,KAGpC,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,CAAMpC,UAAWA,EAAWI,MAAOiB,KAAKzB,MAAMQ,MAC9CQ,QAASS,KAAKzB,MAAMgB,QACpBE,YAAaO,KAAKzB,MAAMkB,YACxBE,WAAYK,KAAKzB,MAAMoB,YACrBnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBqB,KAAKzB,MAAMuC,aAA5C,KACAtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAUiC,MAAOA,YAvBdN,IAAMC,WC+BjBS,cA9Bb,SAAAA,EAAYzC,GAAQ,OAAAuB,OAAAC,EAAA,EAAAD,CAAAE,KAAAgB,GAAAlB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkB,GAAAb,KAAAH,KACZzB,uFAGc6B,GACpB,OAAGA,EAAUK,WAAaT,KAAKzB,MAAMkC,UAChCL,EAAUa,SAAWjB,KAAKzB,MAAM0C,QAChCb,EAAUM,OAASV,KAAKzB,MAAMmC,sCAQ5B,IAAAQ,EAAAlB,KACP,OACExB,EAAAC,EAAAC,cAACyC,EAAD,CACEL,aAAcd,KAAKzB,MAAM6C,WAAWpB,KAAKzB,MAAM8C,SAAUrB,KAAKzB,MAAM0C,QACpE1B,QAAS,SAACT,GAAD,OAAOoC,EAAK3C,MAAM+C,YAAYxC,EAAGoC,EAAK3C,MAAM8C,SAAUH,EAAK3C,MAAMgD,WAC1E9B,YAAa,SAACX,GAAD,OAAOoC,EAAK3C,MAAMiD,WAAW1C,EAAGoC,EAAK3C,MAAM8C,SAAUH,EAAK3C,MAAMgD,WAC7E5B,WAAY,SAACb,GAAD,OAAOoC,EAAK3C,MAAMkD,UAAU3C,EAAGoC,EAAK3C,MAAM8C,SAAUH,EAAK3C,MAAMgD,WAC3Eb,KAAMV,KAAKzB,MAAMmC,KACjB3B,MAAOiB,KAAKzB,MAAM0C,OAClBR,SAAUT,KAAKzB,MAAMkC,kBAzBKH,IAAMC,WCUzBmB,EAVC,SAACnD,GACf,OACEC,EAAAC,EAAAC,cAACqC,EAAD,CAAMpC,UAAU,WAAWI,MAAOR,EAAMQ,MACtCU,YAAalB,EAAMkB,YACnBE,WAAYpB,EAAMoB,YAClBnB,EAAAC,EAAAC,cAAA,QAAMa,QAAShB,EAAMoD,YAAahD,UAAU,cAAaH,EAAAC,EAAAC,cAAA,6DCYhDkD,cAhBb,SAAAA,EAAYrD,GAAQ,OAAAuB,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,GAAA9B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8B,GAAAzB,KAAAH,KACZzB,0EAGC,IAAA2C,EAAAlB,KACP,OACExB,EAAAC,EAAAC,cAACmD,EAAD,CACEpC,YAAa,SAACX,GAAD,OAAOoC,EAAK3C,MAAMuD,cAAcZ,EAAK3C,MAAMwD,QACxDpC,WAAY,SAACb,GAAD,OAAOoC,EAAK3C,MAAMyD,aAAad,EAAK3C,MAAMwD,QACtDJ,YAAa,SAAC7C,GAAD,OAAOoC,EAAK3C,MAAMoD,YAAY7C,EAAGoC,EAAK3C,MAAMwD,QACzDhD,MAAOiB,KAAKzB,MAAM0D,sBAXI3B,IAAMC,WCwCrB2B,cAtCb,SAAAA,EAAY3D,GAAQ,OAAAuB,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,KACZzB,uFAGc6B,GACpB,OAAOA,EAAUC,yCAGV,IAAAa,EAAAlB,KACP,OACExB,EAAAC,EAAAC,cAAA,UACGsB,KAAKzB,MAAM4D,MAAMC,IAAI,SAACC,EAAMd,GAAP,OAElB/C,EAAAC,EAAAC,cAAC4D,EAAD,CACEC,IAAKhB,EACLF,SAAUH,EAAK3C,MAAMwD,MACrBR,SAAUA,EACVH,WAAYF,EAAK3C,MAAM6C,WACvBE,YAAaJ,EAAK3C,MAAM+C,YACxBE,WAAYN,EAAK3C,MAAMiD,WACvBC,UAAWP,EAAK3C,MAAMkD,UACtBf,KAAM2B,EAAK3B,KACXO,OAAQoB,EAAKpB,OACbR,SAAU4B,EAAK5B,aAGnBjC,EAAAC,EAAAC,cAAC8D,EAAD,CACET,MAAO/B,KAAKzB,MAAMwD,MAClBD,cAAe9B,KAAKzB,MAAMuD,cAC1BE,aAAchC,KAAKzB,MAAMyD,aACzBL,YAAa3B,KAAKzB,MAAMoD,YACxBM,aAAcjC,KAAKzB,MAAM0D,uBAhCd3B,IAAMC,WC2UdkC,EA1UJ,SAAAC,GACT,SAAAD,EAAYlE,GAAO,IAAA2C,EAAA,OAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjBvB,EAAApB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMzB,KAgNR6C,WAAa,SAACW,EAAOhD,GACnB,OAAQA,EAAQmC,EAAKyB,aAAaZ,EAAOb,EAAK0B,MAAMC,MAAO3B,EAAK3C,MAAMa,MAAQ,KAAK0D,QAAQ,IAlN1E5B,EA6OnB6B,SAAW,SAACjE,GACVA,EAAEkE,iBAEF9B,EAAK+B,SAAS,SAAAL,GAEZ,IAAIC,EAAK/C,OAAAoD,EAAA,EAAApD,CAAO8C,EAAMC,OAMtB,OAJAA,EAAMA,EAAMM,QAAUjC,EAAKkC,gBAAgBR,EAAMC,MAAMM,QACvDjC,EAAKmC,UAAUnC,EAAKmC,UAAUF,QAAUjC,EAAKoC,eAC7CpC,EAAKqC,WAAWrC,EAAKqC,WAAWJ,SAAU,EAEnC,CAACN,MAAOA,EAAOW,KAAMtC,EAAKuC,QAAQZ,EAAOA,EAAMM,OAAQjC,EAAK3C,MAAMa,SAG3E8B,EAAK3C,MAAMwE,SAASjE,IA3PHoC,EA8PnBS,YAAc,SAAC7C,EAAG4E,GAChB5E,EAAEkE,iBAEF9B,EAAK3C,MAAMoD,YAAY7C,GAEvBoC,EAAK+B,SAAS,SAAAL,GAEZ,IAAIC,EAAK/C,OAAAoD,EAAA,EAAApD,CAAO8C,EAAMC,OAEtBA,EAAMc,OAAOD,EAAK,GAClBxC,EAAKmC,UAAUM,OAAOD,EAAK,GAC3BxC,EAAKqC,WAAWI,OAAOD,EAAK,GAE5B,IAAI,IAAIE,EAAIF,EAAKG,EAAIhB,EAAMM,OAAQS,EAAIC,EAAGD,IACxC1C,EAAK4C,gBAAgBF,GAGvB,MAAO,CAACf,MAAOA,EAAOW,KAAMtC,EAAKuC,QAAQZ,EAAOA,EAAMM,OAAQjC,EAAK3C,MAAMa,UA5Q3E8B,EAAK6C,kBAAoBxF,EAAMyF,aAAe,EAE9C9C,EAAK+C,WAAa,GAClB/C,EAAKmC,UAAY,GACjBnC,EAAKqC,WAAa,GAClBrC,EAAKgD,eAAiB,EAEtBhD,EAAK0B,MAAQ,CACXC,MAAO3B,EAAKiD,qBAGdjD,EAAK0B,MAAMY,KAAOtC,EAAKuC,QAAQvC,EAAK0B,MAAMC,MAAOtE,EAAMU,KAAMV,EAAMa,MAEnE8B,EAAKE,WAAYF,EAAKE,WAAWgD,KAAhBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IACjBA,EAAKI,YAAaJ,EAAKI,YAAY8C,KAAjBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IAClBA,EAAKM,WAAYN,EAAKM,WAAW4C,KAAhBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IACjBA,EAAKO,UAAWP,EAAKO,UAAU2C,KAAftE,OAAAuE,EAAA,EAAAvE,CAAAoB,IAEhBA,EAAKY,cAAeZ,EAAKY,cAAcsC,KAAnBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IACpBA,EAAKc,aAAcd,EAAKc,aAAaoC,KAAlBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IACnBA,EAAKS,YAAaT,EAAKS,YAAYyC,KAAjBtE,OAAAuE,EAAA,EAAAvE,CAAAoB,IAvBDA,EADV,OAAApB,OAAAwE,EAAA,EAAAxE,CAAA2C,EAAAC,GAAA5C,OAAAyE,EAAA,EAAAzE,CAAA2C,EAAA,EAAAF,IAAA,eAAAxD,MAAA,WA4BP,QAASiB,KAAKkE,gBA5BP,CAAA3B,IAAA,oBAAAxD,MAAA,WAkCP,IAFA,IAAI8D,EAAQ,GAEJe,EAAI,EAAGA,EAAI5D,KAAKzB,MAAMU,KAAM2E,IAClCf,EAAMe,GAAK5D,KAAKoD,gBAAgBQ,GAChC5D,KAAKqD,UAAUO,GAAK5D,KAAKsD,eACzBtD,KAAKuD,WAAWK,IAAK,EAGvB,OAAOf,IAxCA,CAAAN,IAAA,kBAAAxD,MAAA,SA2CO6E,GAGd,IAFA,IAAIF,EAAM,GAEFc,EAAI,EAAGA,EAAIxE,KAAKzB,MAAMa,KAAMoF,IAClCd,EAAIc,GAAKxE,KAAKyE,iBAAiBb,EAAGY,GAGpC,OAAOd,IAlDA,CAAAnB,IAAA,mBAAAxD,MAAA,SAqDQM,EAAGqF,GACjB,MAAO,CACLC,GAAE,GAAAC,OAAKvF,GAALuF,OAASF,GACXzD,OAAQjB,KAAK6E,oBAxDT,CAAAtC,IAAA,iBAAAxD,MAAA,WA6DP,OAAO+F,SAASC,KAAKC,SACFC,WACAC,UAAU,EAAGlF,KAAK+D,sBA/D9B,CAAAxB,IAAA,UAAAxD,MAAA,SAmED8D,EAAO5D,EAAMG,GACnB,MAAO,CACLH,KAAMe,KAAKmF,YAAYtC,EAAO5D,EAAMG,GACpCA,KAAMY,KAAKoF,YAAYvC,EAAO5D,EAAMG,MAtE/B,CAAAmD,IAAA,cAAAxD,MAAA,SA0EG8D,EAAOwC,EAAWC,GAG5B,IAFA,IAAIrG,EAAO,GAEH2E,EAAI,EAAGA,EAAIyB,EAAWzB,IAC5B3E,EAAK2E,GAAK5D,KAAK2C,aAAaiB,EAAGf,EAAOyC,GAGxC,OAAOrG,IAjFA,CAAAsD,IAAA,cAAAxD,MAAA,SAoFG8D,EAAOwC,EAAWC,GAG5B,IAFA,IAAIlG,EAAO,GAEHwE,EAAI,EAAGA,EAAI0B,EAAW1B,IAC5BxE,EAAKwE,GAAK5D,KAAKuF,aAAa3B,EAAGf,EAAOwC,GAGxC,OAAOjG,IA3FA,CAAAmD,IAAA,eAAAxD,MAAA,SA8FI2E,EAAKb,EAAOyC,GAKvB,IAJA,IAAIE,EAAM3C,GAAS7C,KAAK4C,MAAMC,MAE1B4C,EAAW,EAEP7B,EAAI,EAAGA,EAAI0B,EAAW1B,IAC5B6B,GAAYD,EAAI9B,GAAKE,GAAG3C,OAG1B,OAAOwE,IAvGA,CAAAlD,IAAA,eAAAxD,MAAA,SA0GI2G,EAAK7C,EAAOwC,GAKvB,IAJA,IAAIG,EAAM3C,GAAS7C,KAAK4C,MAAMC,MAE1B8C,EAAW,EAEP/B,EAAI,EAAGA,EAAIyB,EAAWzB,IAC5B+B,GAAYH,EAAI5B,GAAG8B,GAAKzE,OAG1B,OAAO0E,IAnHA,CAAApD,IAAA,kBAAAxD,MAAA,SAsHO2E,GACd1D,KAAKuD,WAAWG,IAAO,IAvHhB,CAAAnB,IAAA,oBAAAxD,MAAA,WA2HPiB,KAAKuD,WAAavD,KAAKuD,WAAWnB,IAAI,kBAAM,MA3HrC,CAAAG,IAAA,cAAAxD,MAAA,SA8HGD,EAAG4E,EAAKgC,GAAK,IAAAE,EAAA5F,KACvBA,KAAK8D,gBAAgBJ,GAErB1D,KAAKiD,SAAS,SAAAL,GACZ,IAAIiD,EAAa/F,OAAAoD,EAAA,EAAApD,CAAO8F,EAAKhD,MAAMC,OASnC,OARAgD,EAAcnC,GAAd5D,OAAAoD,EAAA,EAAApD,CAAyB+F,EAAcnC,IACvCmC,EAAcnC,GAAKgC,GAAO5F,OAAOgG,OAAO,GAAID,EAAcnC,GAAKgC,GAAM,CACnEzE,OAAQ4E,EAAcnC,GAAKgC,GAAKzE,OAAS,IAG3C4E,EAAgBD,EAAKG,kBAAkBF,GAGhC,CAAChD,MAFRgD,EAAgBD,EAAKI,gBAAgBH,EAAenC,EAAKgC,GAE3BlC,KAAMoC,EAAKnC,QAAQoC,EAAeD,EAAKrH,MAAMU,KAAM2G,EAAKrH,MAAMa,WA3IvF,CAAAmD,IAAA,aAAAxD,MAAA,SA+IED,EAAG4E,EAAKgC,GAAK,IAAAO,EAAAjG,KACtBA,KAAKiD,SAAS,SAAAL,GACZ,MAAO,CAACC,MAAOoD,EAAKD,gBAAgBpD,EAAMC,MAAOa,EAAKgC,QAjJjD,CAAAnD,IAAA,YAAAxD,MAAA,SAqJCD,EAAG4E,EAAKgC,GAAK,IAAAQ,EAAAlG,KACrBA,KAAKiD,SAAS,SAAAL,GACZ,MAAO,CAACC,MAAOqD,EAAKH,kBAAkBnD,EAAMC,YAvJvC,CAAAN,IAAA,kBAAAxD,MAAA,SA4JO8D,EAAOsD,EAASC,GAC9B,IAAIC,EAAexD,EAAMsD,GAASC,GAE9BE,EAAczD,EAAM0D,OAAO,SAACpE,EAAOuB,EAAKrC,GAU1C,OATAqC,EAAI8C,QAAQ,SAACnE,EAAMd,GACjBY,EAAMsE,KAAK,CACT/C,IAAKrC,EACLqE,IAAKnE,EACLmF,WAAY3B,KAAK4B,IAAIN,EAAapF,OAASoB,EAAKpB,QAChDoB,KAAMA,MAIHF,GACN,IAEHmE,EAAcA,EAAYM,KAAK,SAACnI,EAAGoI,GACjC,OAAGpI,EAAEiI,WAAaG,EAAEH,YAAoB,EACrCjI,EAAEiI,WAAaG,EAAEH,WAAmB,EACpCjI,EAAEiI,aAAeG,EAAEH,WAAmB,OAAzC,IAGF1G,KAAKiE,WAAa,GAIlB,IAFA,IAAI6C,EAAoBR,EAAYnD,OAE5B4D,EAAW,EAAGnD,EAAI,EAAGmD,EAAW/G,KAAKzB,MAAMc,EAAGuE,IAAK,CACzD,GAAGkD,IAAsBlD,EAAG,OACzB0C,EAAY1C,GAAGvB,OAASgE,IAE3BrG,KAAKiE,WAAW8C,GAAYT,EAAY1C,GAExC5D,KAAK8D,gBAAgBwC,EAAY1C,GAAGF,KACpCb,EAAMyD,EAAY1C,GAAGF,KAAK4C,EAAY1C,GAAG8B,KAAKjF,UAAW,EACzDsG,KAGF,OAAOlE,IAjMA,CAAAN,IAAA,oBAAAxD,MAAA,SAqMS8D,GAGhB,IAFA,IAAImE,EAAmBhH,KAAKiE,WAAWd,OAE/BS,EAAI,EAAGA,EAAI5D,KAAKzB,MAAMc,EAAGuE,IAAK,CACpC,GAAGoD,IAAqBpD,EAAG,OAE3B5D,KAAK8D,gBAAgB9D,KAAKiE,WAAWL,GAAGF,KACxCb,EAAM7C,KAAKiE,WAAWL,GAAGF,KAAK1D,KAAKiE,WAAWL,GAAG8B,KAAKjF,UAAW,EAGnE,OAAOoC,IA/MA,CAAAN,IAAA,gBAAAxD,MAAA,SAsNK2E,GACZ1D,KAAK8D,gBAAgBJ,GAErB1D,KAAKiD,SAAS,SAAAL,GAKZ,OAJAA,EAAMC,MAAMa,GAAK8C,QAAQ,SAACnE,GACxBA,EAAK3B,MAAO,IAGP,OA9NF,CAAA6B,IAAA,eAAAxD,MAAA,SAkOI2E,GACX1D,KAAK8D,gBAAgBJ,GAErB1D,KAAKiD,SAAS,SAAAL,GAKZ,OAJAA,EAAMC,MAAMa,GAAK8C,QAAQ,SAACnE,GACxBA,EAAK3B,MAAO,IAGP,OA1OF,CAAA6B,IAAA,SAAAxD,MAAA,WAuRP,IAFA,IAAIE,EAAO,GAEH2E,EAAI,EAAGA,EAAI5D,KAAKzB,MAAMU,KAAM2E,IAClC3E,EAAKwH,KACHjI,EAAAC,EAAAC,cAACuI,EAAD,CACElF,MAAO6B,EACPzB,MAAOnC,KAAK4C,MAAMC,MAAMe,GACxBrB,IAAKvC,KAAKqD,UAAUO,GACpBvD,QAASL,KAAKuD,WAAWK,GAEzBxC,WAAYpB,KAAKoB,WACjBE,YAAatB,KAAKsB,YAClBE,WAAYxB,KAAKwB,WACjBC,UAAWzB,KAAKyB,UAEhBK,cAAe9B,KAAK8B,cACpBE,aAAchC,KAAKgC,aACnBL,YAAa3B,KAAK2B,YAClBM,aAAcjC,KAAK4C,MAAMC,MAAMe,GAAG2C,OAAO,SAACW,EAAG7E,GAAJ,OAAc6E,EAAI7E,EAAKpB,QAAQ,MAK9E,OACEzC,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,mJACAF,EAAAC,EAAAC,cAAA,KAAGyI,KAAK,IAAIxI,UAAU,YAAYY,QAASS,KAAK+C,UAAhD,0FAEFvE,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,aACGO,GAEHT,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAC0I,EAAD,CAAK/G,SAAS,GACXL,KAAK4C,MAAMY,KAAKpE,KAAKgD,IAAI,SAACiF,EAAKtF,GAAN,OACxBvD,EAAAC,EAAAC,cAACqC,EAAD,CAAMwB,IAAKR,EAAOhD,MAAOsI,WAzT5B,CAAA9E,IAAA,qBAAAxD,MAAA,WAkUPiB,KAAKsH,sBAlUE,CAAA/E,IAAA,oBAAAxD,MAAA,WAsUPiB,KAAKsH,wBAtUE7E,EAAA,CAAuBnC,IAAMC,WCOzBgH,EATG,SAAChJ,GACjB,OACEC,EAAAC,EAAAC,cAAC8I,EAAD,CAAOpI,KAAMb,EAAMa,KAAMH,KAAMV,EAAMU,KAAMI,EAAGd,EAAMc,EAClD2E,aAAczF,EAAMyF,aACpBjB,SAAUxE,EAAMwE,SAChBpB,YAAapD,EAAMoD,eCmEV8F,EAvEN,SAAA/E,GACP,SAAA+E,EAAYlJ,GAAO,IAAA2C,EAAA,OAAApB,OAAAC,EAAA,EAAAD,CAAAE,KAAAyH,IACjBvG,EAAApB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2H,GAAAtH,KAAAH,KAAMzB,KAYRK,SAAW,SAACE,GACVA,EAAEkE,iBAEF9B,EAAKwG,WAAW,UAhBCxG,EAmBnBwG,WAAa,SAACC,GACZzG,EAAK+B,SAAS,CACZ0E,KAAMA,KArBSzG,EAyBnBrC,SAAW,SAACC,EAAG8I,GACb1G,EAAK+B,SAAS,CACZjE,OAAQc,OAAOgG,OAAO,GAAI5E,EAAK0B,MAAM5D,OAA7Bc,OAAA+H,EAAA,EAAA/H,CAAA,GACL8H,EAAO9C,SAAShG,EAAEgJ,OAAO/I,YA5BbmC,EAiCnB6B,SAAW,SAACjE,GACVoC,EAAK+B,SAAS,SAACL,EAAOmF,GACpB,MAAO,CAAC/I,OAAQc,OAAOgG,OAAO,GAAIlD,EAAM5D,OAAQ,CAACC,KAAM2D,EAAM5D,OAAOC,KAAO,QAnC5DiC,EAuCnBS,YAAc,SAAC7C,GACboC,EAAK+B,SAAS,SAACL,EAAOmF,GACpB,MAAO,CAAC/I,OAAQc,OAAOgG,OAAO,GAAIlD,EAAM5D,OAAQ,CAACC,KAAM2D,EAAM5D,OAAOC,KAAO,QAtC7EiC,EAAK0B,MAAQ,CACX5D,OAAQ,CACNC,KAAM,GACNG,KAAM,GACNC,EAAG,IAELsI,KAAM,eATSzG,EADZ,OAAApB,OAAAwE,EAAA,EAAAxE,CAAA2H,EAAA/E,GAAA5C,OAAAyE,EAAA,EAAAzE,CAAA2H,EAAA,EAAAlF,IAAA,SAAAxD,MAAA,WA+CL,IAAI4I,EAEJ,OAAO3H,KAAK4C,MAAM+E,MAChB,IAAK,cAAeA,EAAOnJ,EAAAC,EAAAC,cAACsJ,EAAD,CACzBpJ,SAAUoB,KAAKpB,SACfC,SAAUmB,KAAKnB,SACfG,OAAQgB,KAAK4C,MAAM5D,SACnB,MACF,IAAK,QAAS2I,EAAOnJ,EAAAC,EAAAC,cAACuJ,EAAD,CACnBhJ,KAAMe,KAAK4C,MAAM5D,OAAOC,KACxBG,KAAMY,KAAK4C,MAAM5D,OAAOI,KACxBC,EAAGW,KAAK4C,MAAM5D,OAAOK,EACrB2E,aAAc,EACdjB,SAAU/C,KAAK+C,SACfpB,YAAa3B,KAAK2B,cAMtB,OAAOgG,MAnEFF,EAAA,CAAqBnH,IAAMC,WCEpC2H,IAASC,OAAO3J,EAAAC,EAAAC,cAAC0J,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.197de1e2.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageCreateTable = (props) => {\n  return (\n      <div className=\"page-create-table\">\n        <h1>Построить таблицу</h1>\n\n        <form onSubmit={props.onSubmit}>\n          <input onChange={(e) => props.onChange(e, 'rows')} value={props.values.rows} type=\"number\" placeholder=\"Введите количество строк\" />\n          <input onChange={(e) => props.onChange(e, 'cols')} value={props.values.cols} type=\"number\" placeholder=\"Введите количество столбцов\" />\n          <input onChange={(e) => props.onChange(e, 'x')} value={props.values.x} type=\"number\" placeholder=\"Введите число X\" />\n\n          <input type=\"submit\" value=\"Построить\" />\n        </form>\n      </div>\n    );\n};\n\nexport default PageCreateTable;\n","import React from 'react';\n\nconst Cell = (props) => {\n  return <td className={props.className}\n             onClick={props.onClick}\n             onMouseEnter={props.onMouseOver}\n             onMouseLeave={props.onMouseOut}>\n              <span className=\"amount\">{props.value}</span>\n              {props.children}\n         </td>;\n};\n\nexport default  Cell;\n","import React from 'react';\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.changed;\n  }\n\n  render() {\n    return (\n      <tr>{this.props.children}</tr>\n    );\n  }\n}\n\n// const Row = (props) => {\n//   return (\n//     <tr>{props.children}</tr>\n//   );\n// };\n\nexport default Row;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nclass PercentCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = [\n      this.props.higlight ? 'higlight' : '',\n      this.props.over ? 'over' : ''\n    ];\n\n    let className = classes.join(' ');\n\n    let style = {\n      height: this.props.percentValue + '%'\n    };\n\n    return (\n      <Cell className={className} value={this.props.value}\n      onClick={this.props.onClick}\n      onMouseOver={this.props.onMouseOver}\n      onMouseOut={this.props.onMouseOut}>\n        <span className=\"percent_value\">{this.props.percentValue}%</span>\n        <div className=\"percent\" style={style}></div>\n      </Cell>\n    );\n  }\n};\n\nexport default PercentCell;\n","import React from 'react';\n\nimport PercentCell from '../percent-cell/percent-cell';\n\nclass TableRowPercentCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if(nextProps.higlight === this.props.higlight\n      && nextProps.amount === this.props.amount\n      && nextProps.over === this.props.over\n    )  {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <PercentCell\n        percentValue={this.props.getPercent(this.props.rowIndex, this.props.amount)}\n        onClick={(e) => this.props.onCellClick(e, this.props.rowIndex, this.props.colIndex)}\n        onMouseOver={(e) => this.props.onCellOver(e, this.props.rowIndex, this.props.colIndex)}\n        onMouseOut={(e) => this.props.onCellOut(e, this.props.rowIndex, this.props.colIndex)}\n        over={this.props.over}\n        value={this.props.amount}\n        higlight={this.props.higlight}\n        />\n    );\n  }\n};\n\nexport default TableRowPercentCell;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst SumCell = (props) => {\n  return (\n    <Cell className=\"sum_cell\" value={props.value}\n      onMouseOver={props.onMouseOver}\n      onMouseOut={props.onMouseOut}>\n      <span onClick={props.onRowRemove} className=\"delete_row\"><span>Удалить</span></span>\n    </Cell>\n  );\n};\n\nexport default SumCell;\n","import React from 'react';\n\nimport SumCell from '../sum-cell/sum-cell';\n\nclass TableRowSumCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <SumCell\n        onMouseOver={(e) => this.props.onSumCellOver(this.props.index)}\n        onMouseOut={(e) => this.props.onSumCellOut(this.props.index)}\n        onRowRemove={(e) => this.props.onRowRemove(e, this.props.index)}\n        value={this.props.sumCellValue}\n        />\n    );\n  }\n};\n\nexport default TableRowSumCell;\n","import React from 'react';\n\nimport TableRowPercentCell from '../table-row-percent-cell/table-row-percent-cell';\nimport TableRowSumCell from '../table-row-sum-cell/table-row-sum-cell';\n\nclass TableRow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.changed;\n  }\n\n  render() {\n    return (\n      <tr>\n        {this.props.cells.map((cell, colIndex) =>\n\n            <TableRowPercentCell\n              key={colIndex}\n              rowIndex={this.props.index}\n              colIndex={colIndex}\n              getPercent={this.props.getPercent}\n              onCellClick={this.props.onCellClick}\n              onCellOver={this.props.onCellOver}\n              onCellOut={this.props.onCellOut}\n              over={cell.over}\n              amount={cell.amount}\n              higlight={cell.higlight}/>\n          )}\n\n          <TableRowSumCell\n            index={this.props.index}\n            onSumCellOver={this.props.onSumCellOver}\n            onSumCellOut={this.props.onSumCellOut}\n            onRowRemove={this.props.onRowRemove}\n            sumCellValue={this.props.sumCellValue}\n            />\n      </tr>\n    );\n  }\n}\n\nexport default TableRow;\n","import React from 'react';\n\nimport Cell from '../cell/cell';\nimport Row from '../row/row';\nimport TableRow from '../table-row/table-row';\n\nconst Table = class Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.amountDigitsIndex = props.amountDigits + 2;\n\n    this.higlighted = [];\n    this.rowIdList = [];\n    this.rowChanges = [];\n    this._currentRowId = -1;\n\n    this.state = {\n      table: this.generateTableData()\n    };\n\n    this.state.sums = this.getSums(this.state.table, props.rows, props.cols);\n\n    this.getPercent= this.getPercent.bind(this);\n    this.onCellClick= this.onCellClick.bind(this);\n    this.onCellOver= this.onCellOver.bind(this);\n    this.onCellOut= this.onCellOut.bind(this);\n\n    this.onSumCellOver= this.onSumCellOver.bind(this);\n    this.onSumCellOut= this.onSumCellOut.bind(this);\n    this.onRowRemove= this.onRowRemove.bind(this);\n  }\n\n  getNextRowId() {\n    return ++this._currentRowId;\n  }\n\n  generateTableData() {\n    let table = [];\n\n    for(let i = 0; i < this.props.rows; i++) {\n      table[i] = this.generateRowData(i);\n      this.rowIdList[i] = this.getNextRowId();\n      this.rowChanges[i] = true;\n    }\n\n    return table;\n  }\n\n  generateRowData(i) {\n    let row = [];\n\n    for(let j = 0; j < this.props.cols; j++) {\n      row[j] = this.generateCellData(i, j);\n    }\n\n    return row;\n  }\n\n  generateCellData(x, y) {\n     return {\n       id: `${x}${y}`,\n       amount: this.generateAmount()\n     };\n   }\n\n  generateAmount() {\n    return parseInt(Math.random()\n                      .toString()\n                      .substring(2, this.amountDigitsIndex)\n                    );\n  }\n\n  getSums(table, rows, cols) {\n    return {\n      rows: this.getRowsSums(table, rows, cols),\n      cols: this.getColsSums(table, rows, cols)\n    };\n  }\n\n  getRowsSums(table, rowsCount, colsCount) {\n    let rows = [];\n\n    for(let i = 0; i < rowsCount; i++) {\n      rows[i] = this.calcSumByRow(i, table, colsCount);\n    }\n\n    return rows;\n  }\n\n  getColsSums(table, rowsCount, colsCount) {\n    let cols = [];\n\n    for(let i = 0; i < colsCount; i++) {\n      cols[i] = this.calcSumByCol(i, table, rowsCount);\n    }\n\n    return cols;\n  }\n\n  calcSumByRow(row, table, colsCount) {\n    let tbl = table || this.state.table;\n\n    let sumByRow = 0;\n\n    for(let i = 0; i < colsCount; i++) {\n      sumByRow += tbl[row][i].amount;\n    }\n\n    return sumByRow;\n  }\n\n  calcSumByCol(col, table, rowsCount) {\n    let tbl = table || this.state.table;\n\n    let sumByCol = 0;\n\n    for(let i = 0; i < rowsCount; i++) {\n      sumByCol += tbl[i][col].amount;\n    }\n\n    return sumByCol;\n  }\n\n  markChangedRows(row) {\n    this.rowChanges[row] = true;\n  }\n\n  unmarkChangedRows() {\n    this.rowChanges = this.rowChanges.map(() => false);\n  }\n\n  onCellClick(e, row, col) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      let newTableState = [...this.state.table];\n      newTableState[row] = [...newTableState[row]];\n      newTableState[row][col] = Object.assign({}, newTableState[row][col], {\n        amount: newTableState[row][col].amount + 1\n      });\n\n      newTableState = this.unHiglightProcess(newTableState);\n      newTableState = this.higlightProcess(newTableState, row, col);\n\n      return {table: newTableState, sums: this.getSums(newTableState, this.props.rows, this.props.cols)};\n    });\n  }\n\n  onCellOver(e, row, col) {\n    this.setState(state => {\n      return {table: this.higlightProcess(state.table, row, col)};\n    });\n  }\n\n  onCellOut(e, row, col) {\n    this.setState(state => {\n      return {table: this.unHiglightProcess(state.table)};\n    });\n  }\n\n  // MUTABLE ARGUMENTS!\n  higlightProcess(table, cellRow, cellCol) {\n    let cellSelected = table[cellRow][cellCol];\n\n    let sortedCells = table.reduce((cells, row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        cells.push({\n          row: rowIndex,\n          col: colIndex,\n          amountDiff: Math.abs(cellSelected.amount - cell.amount),\n          cell: cell\n        });\n      });\n\n      return cells;\n    }, []);\n\n    sortedCells = sortedCells.sort((a, b) => {\n      if(a.amountDiff < b.amountDiff) return -1;\n      if(a.amountDiff > b.amountDiff) return 1;\n      if(a.amountDiff === b.amountDiff) return 0;\n    });\n\n    this.higlighted = [];\n\n    let sortedCellsLength = sortedCells.length;\n\n    for(let selected = 0, i = 0; selected < this.props.x; i++) {\n      if(sortedCellsLength === i) return;\n      if(sortedCells[i].cell === cellSelected) continue;\n\n      this.higlighted[selected] = sortedCells[i];\n\n      this.markChangedRows(sortedCells[i].row);\n      table[sortedCells[i].row][sortedCells[i].col].higlight = true;\n      selected++;\n    }\n\n    return table;\n  }\n\n  // MUTABLE ARGUMENTS!\n  unHiglightProcess(table) {\n    let higlightedLength = this.higlighted.length;\n\n    for(let i = 0; i < this.props.x; i++) {\n      if(higlightedLength === i) return;\n\n      this.markChangedRows(this.higlighted[i].row);\n      table[this.higlighted[i].row][this.higlighted[i].col].higlight = false;\n    }\n\n    return table;\n  }\n\n  getPercent = (index, value) => {\n    return (value / this.calcSumByRow(index, this.state.table, this.props.cols) * 100).toFixed(2);\n  }\n\n  onSumCellOver(row) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      state.table[row].forEach((cell) => {\n        cell.over = true;\n      });\n\n      return {};\n    });\n  }\n\n  onSumCellOut(row) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      state.table[row].forEach((cell) => {\n        cell.over = false;\n      });\n\n      return {};\n    });\n  }\n\n  onRowAdd = (e) => {\n    e.preventDefault();\n\n    this.setState(state => {\n\n      let table = [...state.table];\n\n      table[table.length] = this.generateRowData(state.table.length);\n      this.rowIdList[this.rowIdList.length] = this.getNextRowId();\n      this.rowChanges[this.rowChanges.length] = true;\n\n      return {table: table, sums: this.getSums(table, table.length, this.props.cols)};\n    });\n\n    this.props.onRowAdd(e);\n  }\n\n  onRowRemove = (e, row) => {\n    e.preventDefault();\n\n    this.props.onRowRemove(e);\n\n    this.setState(state => {\n\n      let table = [...state.table];\n\n      table.splice(row, 1);\n      this.rowIdList.splice(row, 1);\n      this.rowChanges.splice(row, 1);\n\n      for(let i = row, l = table.length; i < l; i++) {\n        this.markChangedRows(i);\n      }\n\n      return {table: table, sums: this.getSums(table, table.length, this.props.cols)};\n    });\n  }\n\n  render() {\n    let rows = [];\n\n    for(let i = 0; i < this.props.rows; i++) {\n      rows.push(\n        <TableRow\n          index={i}\n          cells={this.state.table[i]}\n          key={this.rowIdList[i]}\n          changed={this.rowChanges[i]}\n\n          getPercent={this.getPercent}\n          onCellClick={this.onCellClick}\n          onCellOver={this.onCellOver}\n          onCellOut={this.onCellOut}\n\n          onSumCellOver={this.onSumCellOver}\n          onSumCellOut={this.onSumCellOut}\n          onRowRemove={this.onRowRemove}\n          sumCellValue={this.state.table[i].reduce((s, cell) =>  s + cell.amount, 0)}\n          />\n      );\n    }\n\n    return (\n      <table>\n        <caption>\n          <h2>Сгенерированная таблица</h2>\n          <a href=\"#\" className=\"table-btn\" onClick={this.onRowAdd}>Добавить строку</a>\n        </caption>\n        <thead></thead>\n        <tbody>\n          {rows}\n        </tbody>\n        <tfoot>\n          <Row changed={true}>\n            {this.state.sums.cols.map((sum, index) =>\n              <Cell key={index} value={sum}/>\n            )}\n          </Row>\n        </tfoot>\n      </table>\n    );\n  }\n\n  componentDidUpdate() {\n    this.unmarkChangedRows();\n  }\n\n  componentDidMount() {\n    this.unmarkChangedRows();\n  }\n};\n\nexport default Table;\n","import React from 'react';\n\nimport Table from '../table/table';\n\nconst PageTable = (props) => {\n  return (\n    <Table cols={props.cols} rows={props.rows} x={props.x}\n      amountDigits={props.amountDigits}\n      onRowAdd={props.onRowAdd}\n      onRowRemove={props.onRowRemove}/>\n  );\n};\n\nexport default PageTable;\n","import React from 'react';\n\nimport PageCreateTable from '../page-create-table/page-create-table';\nimport PageTable from '../page-table/page-table';\n\nconst App = class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: {\n        rows: '',\n        cols: '',\n        x: ''\n      },\n      page: 'CreateTable'\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    this.togglePage('Table');\n  }\n\n  togglePage = (page) => {\n    this.setState({\n      page: page\n    });\n  }\n\n  onChange = (e, name) => {\n    this.setState({\n      values: Object.assign({}, this.state.values, {\n        [name]: parseInt(e.target.value)\n      })\n    });\n  }\n\n  onRowAdd = (e) => {\n    this.setState((state, cb) => {\n      return {values: Object.assign({}, state.values, {rows: state.values.rows + 1})};\n    });\n  }\n\n  onRowRemove = (e) => {\n    this.setState((state, cb) => {\n      return {values: Object.assign({}, state.values, {rows: state.values.rows - 1})};\n    });\n  }\n\n  render() {\n    let page;\n\n    switch(this.state.page) {\n      case 'CreateTable': page = <PageCreateTable\n        onSubmit={this.onSubmit}\n        onChange={this.onChange}\n        values={this.state.values}/>;\n        break;\n      case 'Table': page = <PageTable\n        rows={this.state.values.rows}\n        cols={this.state.values.cols}\n        x={this.state.values.x}\n        amountDigits={3}\n        onRowAdd={this.onRowAdd}\n        onRowRemove={this.onRowRemove}\n        />;\n        break;\n      default: break;\n    }\n\n    return page;\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}