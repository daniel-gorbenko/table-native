{"version":3,"sources":["components/page-create-table/page-create-table.js","components/cell/cell.js","components/percent-cell/percent-cell.js","components/sum-cell/sum-cell.js","components/row/row.js","components/table/table.js","components/page-table/page-table.js","components/app/app.js","index.js"],"names":["PageCreateTable","props","react_default","a","createElement","onSubmit","onChange","e","value","values","rows","type","placeholder","cols","x","Cell","className","onClick","onMouseEnter","onMouseOver","onMouseLeave","onMouseOut","children","PercenterCell","higlight","over","join","style","height","concat","percentValue","cell_cell","SumCell","onRowRemove","Row","Table","amountDigitsIndex","amountDigits","rowIdList","useRef","rowId","higlighted","sortedCells","_useState","useState","table","isFirstRender","current","i","generateRowData","getNextRowId","_useState2","Object","slicedToArray","setTable","_useState3","getColsSums","_useState4","colsSums","setColsSums","y","row","j","id","amount","parseInt","Math","random","toString","substring","calcSums","colsCount","calcSumByCol","col","sumByCol","getPercent","index","sumByRow","calcSumByRow","toFixed","higlightProcess","cellRow","cellCol","cellSelected","reduce","cells","rowIndex","forEach","cell","colIndex","push","amountDiff","abs","sort","b","sortedCellsLength","length","selected","setCellHighlight","unHiglightProcess","higlightedLength","light","toConsumableArray","_loop","row_row","key","map","percent_cell","sum_cell","preventDefault","splice","s","onRowAdd","sum","PageTable","table_table","App","setRows","setCols","_useState5","_useState6","setX","_useState7","_useState8","page","setPage","page_create_table","name","target","page_table","ReactDOM","render","app","document","getElementById"],"mappings":"wKAgCeA,EA9BS,SAACC,GACvB,OACIC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+GAEAF,EAAAC,EAAAC,cAAA,QAAMC,SAAUJ,EAAMI,UACpBH,EAAAC,EAAAC,cAAA,SACEE,SAAU,SAACC,GAAD,OAAON,EAAMK,SAASC,EAAG,SACnCC,MAAOP,EAAMQ,OAAOC,KACpBC,KAAK,SACLC,YAAY,2IAEdV,EAAAC,EAAAC,cAAA,SACEE,SAAU,SAACC,GAAD,OAAON,EAAMK,SAASC,EAAG,SACnCC,MAAOP,EAAMQ,OAAOI,KACpBF,KAAK,SACLC,YAAY,6JAEdV,EAAAC,EAAAC,cAAA,SACEE,SAAU,SAACC,GAAD,OAAON,EAAMK,SAASC,EAAG,MACnCC,MAAOP,EAAMQ,OAAOK,EACpBH,KAAK,SACLC,YAAY,gFAEdV,EAAAC,EAAAC,cAAA,SAAOO,KAAK,SAASH,MAAM,qECdtBO,EAVF,SAACd,GACZ,OAAOC,EAAAC,EAAAC,cAAA,MAAIY,UAAWf,EAAMe,UACjBC,QAAShB,EAAMgB,QACfC,aAAcjB,EAAMkB,YACpBC,aAAcnB,EAAMoB,YACnBnB,EAAAC,EAAAC,cAAA,QAAMY,UAAU,UAAUf,EAAMO,OAC/BP,EAAMqB,WCiBNC,EArBO,SAACtB,GACrB,IAAIe,EAAY,CACdf,EAAMuB,SAAW,WAAa,GAC9BvB,EAAMwB,KAAO,OAAS,IACtBC,KAAK,KAEHC,EAAQ,CACVC,OAAM,GAAAC,OAAK5B,EAAM6B,aAAX,MAGR,OACE5B,EAAAC,EAAAC,cAAC2B,EAAD,CAAMf,UAAWA,EAAWR,MAAOP,EAAMO,MACzCS,QAAShB,EAAMgB,QACfE,YAAalB,EAAMkB,YACnBE,WAAYpB,EAAMoB,YAChBnB,EAAAC,EAAAC,cAAA,QAAMY,UAAU,iBAAiBf,EAAM6B,aAAvC,KACA5B,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UAAUW,MAAOA,MCNvBK,EAVC,SAAC/B,GACf,OACEC,EAAAC,EAAAC,cAAC2B,EAAD,CAAMf,UAAU,WAAWR,MAAOP,EAAMO,MACtCW,YAAalB,EAAMkB,YACnBE,WAAYpB,EAAMoB,YAClBnB,EAAAC,EAAAC,cAAA,QAAMa,QAAShB,EAAMgC,YAAajB,UAAU,cAAad,EAAAC,EAAAC,cAAA,6DCDhD8B,EANH,SAACjC,GACX,OACEC,EAAAC,EAAAC,cAAA,UAAKH,EAAMqB,WC0QAa,EAvQD,SAAClC,GACb,IAAImC,EAAoBnC,EAAMoC,aAAe,EAEzCC,EAAYC,iBAAO,IACnBC,EAAQD,kBAAQ,GAChBE,EAAaF,iBAAO,IACpBG,EAAcH,iBAAO,IANFI,EAOCC,mBAOxB,WAIE,IAHA,IAAIC,EAAQ,GACRC,GAAmC,IAAnBN,EAAMO,QAElBC,EAAI,EAAGA,EAAI/C,EAAMS,KAAMsC,IAC7BH,EAAMG,GAAKC,EAAgBD,GAExBF,IACDN,EAAMO,QAAUT,EAAUS,QAAQC,GAAKE,KAI3C,OAAOL,IA1BcM,EAAAC,OAAAC,EAAA,EAAAD,CAAAT,EAAA,GAOlBE,EAPkBM,EAAA,GAOXG,EAPWH,EAAA,GAAAI,EAQOX,mBAASY,EAAYvD,EAAMS,KAAMT,EAAMY,KAAMgC,IARpDY,EAAAL,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAQlBG,EARkBD,EAAA,GAQRE,EARQF,EAAA,GAUvB,SAASP,IACP,QAASV,EAAMO,QAkBjB,SAASE,EAAgBD,GAGvB,IAFA,IAS2BY,EATvBC,EAAM,GAEFC,EAAI,EAAGA,EAAI7D,EAAMY,KAAMiD,IAC7BD,EAAIC,IAMqBF,EANIE,EAOxB,CACLC,GAAE,GAAAlC,OARwBmB,GAQxBnB,OAAS+B,GACXI,OAKKC,SAASC,KAAKC,SACFC,WACAC,UAAU,EAAGjC,MAbhC,OAAOyB,EAiBT,SAASS,EAAS5D,EAAMG,EAAMgC,GAC5Bc,EAAYH,EAAY9C,EAAMG,EAAMgC,IAGtC,SAASW,EAAY9C,EAAM6D,EAAW1B,GAGpC,IAFA,IAAIhC,EAAO,GAEHmC,EAAI,EAAGA,EAAIuB,EAAWvB,IAC5BnC,EAAKmC,GAAKwB,EAAaxB,EAAGH,EAAOnC,GAGnC,OAAOG,EAaT,SAAS2D,EAAaC,EAAK5B,EAAOnC,GAGhC,IAFA,IAAIgE,EAAW,EAEP1B,EAAI,EAAGA,EAAItC,EAAMsC,IACvB0B,GAAY7B,EAAMG,GAAGyB,GAAKT,OAG5B,OAAOU,EAGT,SAASC,EAAWC,EAAOpE,GACzB,OAAQA,EArBV,SAAsBqD,GAGpB,IAFA,IAAIgB,EAAW,EAEP7B,EAAI,EAAGA,EAAI/C,EAAMY,KAAMmC,IAC7B6B,GAAYhC,EAAMgB,GAAKb,GAAGgB,OAG5B,OAAOa,EAcSC,CAAaF,GAAS,KAAKG,QAAQ,GAiErD,SAASC,EAAgBC,EAASC,GAChC,IAAIC,EAAetC,EAAMoC,GAASC,GAElCxC,EAAYK,QAAUF,EAAMuC,OAAO,SAACC,EAAOxB,EAAKyB,GAU9C,OATAzB,EAAI0B,QAAQ,SAACC,EAAMC,GACjBJ,EAAMK,KAAK,CACT7B,IAAKyB,EACLb,IAAKgB,EACLE,WAAYzB,KAAK0B,IAAIT,EAAanB,OAASwB,EAAKxB,QAChDwB,KAAMA,MAIHH,GACN,IAEH3C,EAAYK,QAAUL,EAAYK,QAAQ8C,KAAK,SAAC1F,EAAG2F,GACjD,OAAG3F,EAAEwF,WAAaG,EAAEH,YAAoB,EACrCxF,EAAEwF,WAAaG,EAAEH,WAAmB,EACpCxF,EAAEwF,aAAeG,EAAEH,WAAmB,OAAzC,IAGFlD,EAAWM,QAAU,GAIrB,IAFA,IAwBoBc,EAAKY,EAxBrBsB,EAAoBrD,EAAYK,QAAQiD,OAEpCC,EAAW,EAAGjD,EAAI,EAAGiD,EAAWhG,EAAMa,EAAGkC,IAAK,CACpD,GAAG+C,IAAsB/C,EAAG,OAEzBN,EAAYK,QAAQC,GAAGwC,OAASL,IAEnC1C,EAAWM,QAAQkD,GAAYvD,EAAYK,QAAQC,GAiBjCa,EAfLnB,EAAYK,QAAQC,GAAGa,IAebY,EAfkB/B,EAAYK,QAAQC,GAAGyB,IAgBlEyB,EAAiBrC,EAAKY,GAAK,GAfzBwB,MAIJ,SAASE,IAGP,IAFA,IAasBtC,EAAKY,EAbvB2B,EAAmB3D,EAAWM,QAAQiD,OAElChD,EAAI,EAAGA,EAAI/C,EAAMa,EAAGkC,IAAK,CAC/B,GAAGoD,IAAqBpD,EAAG,OAUPa,EARLpB,EAAWM,QAAQC,GAAGa,IAQZY,EARiBhC,EAAWM,QAAQC,GAAGyB,IASlEyB,EAAiBrC,EAAKY,GAAK,IAG7B,SAASyB,EAAiBrC,EAAKY,EAAK4B,GAClC/C,EAAS,SAAAT,GAGP,OAFAA,EAAMgB,GAAKY,GAAKjD,SAAW6E,EAEpBjD,OAAAkD,EAAA,EAAAlD,CAAIP,KAMf,IAFA,IAAInC,EAAO,GAzNY6F,EAAA,SA2NfvD,GACNtC,EAAKgF,KACHxF,EAAAC,EAAAC,cAACoG,EAAD,CAAKC,IAAKnE,EAAUS,QAAQC,IACzBH,EAAMG,GAAG0D,IAAI,SAAClB,EAAMC,GAAP,OACZvF,EAAAC,EAAAC,cAACuG,EAAD,CACEF,IAAKhB,EACL3D,aAAc6C,EAAW3B,EAAGwC,EAAKxB,QACjC/C,QAAS,SAACV,GAAD,OA7FKsD,EA6FiBb,EA7FZyB,EA6FegB,OA5F1CnC,EAAS,SAAAT,GAOP,OANAA,EAAMgB,GAAKY,GAAKT,QAAU,EAE1BM,EAASrE,EAAMS,KAAMT,EAAMY,KAAMgC,GACjCsD,IACAnB,EAAgBnB,EAAKY,GAEdrB,OAAAkD,EAAA,EAAAlD,CAAIP,KARf,IAAwBgB,EAAKY,GA8FnBtD,YAAa,SAACZ,GAjFtByE,EAiF0ChC,EAAGyC,IACrCpE,WAAY,SAACd,GA9ErB4F,KA+EQ1E,KAAM+D,EAAK/D,KACXjB,MAAOgF,EAAKxB,OACZxC,SAAUgE,EAAKhE,aAEnBtB,EAAAC,EAAAC,cAACwG,EAAD,CACEzF,YAAa,SAACZ,GAAD,OAzHEsD,EAyHmBb,OAxHxCM,EAAS,SAAAT,GAKP,OAJAA,EAAMgB,GAAK0B,QAAQ,SAACC,GAClBA,EAAK/D,MAAO,IAGP2B,OAAAkD,EAAA,EAAAlD,CAAIP,KANf,IAAuBgB,GA0HfxC,WAAY,SAACd,GAAD,OAhHEsD,EAgHkBb,OA/GtCM,EAAS,SAAAT,GAKP,OAJAA,EAAMgB,GAAK0B,QAAQ,SAACC,GAClBA,EAAK/D,MAAO,IAGP2B,OAAAkD,EAAA,EAAAlD,CAAIP,KANf,IAAsBgB,GAiHd5B,YAAa,SAAC1B,GAAD,OAjJrB,SAAqBA,EAAGsD,GACtBtD,EAAEsG,iBAEFhE,EAAMiE,OAAOjD,EAAK,GAClBvB,EAAUS,QAAQ+D,OAAOjD,EAAK,GAE9BP,EAAST,GACTyB,EAASrE,EAAMS,KAAO,EAAGT,EAAMY,KAAMgC,GAErC5C,EAAMgC,YAAY1B,GAwIQ0B,CAAY1B,EAAGyC,IACnCxC,MAAOqC,EAAMG,GAAGoC,OAAO,SAAC2B,EAAGvB,GAAJ,OAAcuB,EAAIvB,EAAKxB,QAAQ,QAlBtDhB,EAAI,EAAGA,EAAI/C,EAAMS,KAAMsC,IAAKuD,EAA5BvD,GAuBR,OACE9C,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,mJACAF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,YAAYC,QA/ItC,SAAkBV,EAAGsD,GACnBhB,EAAMA,EAAMmD,QAAU/C,EAAgBJ,EAAMmD,QAC5C1D,EAAUS,QAAQT,EAAUS,QAAQiD,QAAU9C,IAE9CI,EAAST,GACTyB,EAASrE,EAAMS,KAAO,EAAGT,EAAMY,KAAMgC,GAErC5C,EAAM+G,SAASzG,KAwIT,0FAEFL,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,aACGM,GAEHR,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACoG,EAAD,KACG9C,EAASgD,IAAI,SAACO,EAAKrC,GAAN,OACZ1E,EAAAC,EAAAC,cAAC2B,EAAD,CAAM0E,IAAK7B,EAAOpE,MAAOyG,UCzPxBC,EATG,SAACjH,GACjB,OACEC,EAAAC,EAAAC,cAAC+G,EAAD,CAAOtG,KAAMZ,EAAMY,KAAMH,KAAMT,EAAMS,KAAMI,EAAGb,EAAMa,EAClDuB,aAAcpC,EAAMoC,aACpB2E,SAAU/G,EAAM+G,SAChB/E,YAAahC,EAAMgC,eC8CVmF,EAlDH,SAACnH,GAAU,IAAA0C,EACCC,mBAAS,IADVO,EAAAC,OAAAC,EAAA,EAAAD,CAAAT,EAAA,GAChBjC,EADgByC,EAAA,GACVkE,EADUlE,EAAA,GAAAI,EAECX,mBAAS,IAFVa,EAAAL,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEhB1C,EAFgB4C,EAAA,GAEV6D,EAFU7D,EAAA,GAAA8D,EAGL3E,mBAAS,IAHJ4E,EAAApE,OAAAC,EAAA,EAAAD,CAAAmE,EAAA,GAGhBzG,EAHgB0G,EAAA,GAGbC,EAHaD,EAAA,GAAAE,EAIC9E,mBAAS,eAJV+E,EAAAvE,OAAAC,EAAA,EAAAD,CAAAsE,EAAA,GAIhBE,EAJgBD,EAAA,GAIVE,EAJUF,EAAA,GA6BrB,OAAOC,GACL,IAAK,cACH,OAAO1H,EAAAC,EAAAC,cAAC0H,EAAD,CACLzH,SA1BN,SAAmBE,GACjBA,EAAEsG,iBAEFgB,EAAQ,UAwBJvH,SArBN,SAAkBC,EAAGwH,GACnB,OAAOA,GACL,IAAK,OAAQV,EAAQpD,SAAS1D,EAAEyH,OAAOxH,QAAS,MAChD,IAAK,OAAQ8G,EAAQrD,SAAS1D,EAAEyH,OAAOxH,QAAS,MAChD,IAAK,IAAKiH,EAAKxD,SAAS1D,EAAEyH,OAAOxH,UAkB/BC,OAAQ,CAACC,OAAMG,OAAMC,OAEzB,IAAK,QACH,OAAOZ,EAAAC,EAAAC,cAAC6H,EAAD,CACLvH,KAAMA,EACNG,KAAMA,EACNC,EAAGA,EACHuB,aAAc,EACd2E,SArBN,WACEK,EAAQ3G,EAAO,IAqBXuB,YAlBN,WACEoF,EAAQ3G,EAAO,QCxBnBwH,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f06b03c9.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageCreateTable = (props) => {\n  return (\n      <div>\n        <h1>Построить таблицу</h1>\n\n        <form onSubmit={props.onSubmit}>\n          <input\n            onChange={(e) => props.onChange(e, 'rows')}\n            value={props.values.rows}\n            type=\"number\"\n            placeholder=\"Введите количество строк\" />\n\n          <input\n            onChange={(e) => props.onChange(e, 'cols')}\n            value={props.values.cols}\n            type=\"number\"\n            placeholder=\"Введите количество столбцов\" />\n\n          <input\n            onChange={(e) => props.onChange(e, 'x')}\n            value={props.values.x}\n            type=\"number\"\n            placeholder=\"Введите число X\" />\n\n          <input type=\"submit\" value=\"Построить\" />\n        </form>\n      </div>\n    );\n};\n\nexport default PageCreateTable;\n","import React from 'react';\n\nconst Cell = (props) => {\n  return <td className={props.className}\n             onClick={props.onClick}\n             onMouseEnter={props.onMouseOver}\n             onMouseLeave={props.onMouseOut}>\n              <span className=\"amount\">{props.value}</span>\n              {props.children}\n         </td>;\n}\n\nexport default Cell;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst PercenterCell = (props) => {\n  let className = [\n    props.higlight ? 'higlight' : '',\n    props.over ? 'over' : ''\n  ].join(' ');\n\n  let style = {\n    height: `${props.percentValue}%`\n  };\n\n  return (\n    <Cell className={className} value={props.value}\n    onClick={props.onClick}\n    onMouseOver={props.onMouseOver}\n    onMouseOut={props.onMouseOut}>\n      <span className=\"percent_value\">{props.percentValue}%</span>\n      <div className=\"percent\" style={style}></div>\n    </Cell>\n  );\n}\n\nexport default PercenterCell;\n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     if(nextProps.higlight === this.props.higlight\n//       && nextProps.value === this.props.value\n//       && nextProps.percentValue === this.props.percentValue\n//       && nextProps.over === this.props.over\n//     )  {\n//       return false;\n//     }\n//\n//     return true;\n//   }\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst SumCell = (props) => {\n  return (\n    <Cell className=\"sum_cell\" value={props.value}\n      onMouseOver={props.onMouseOver}\n      onMouseOut={props.onMouseOut}>\n      <span onClick={props.onRowRemove} className=\"delete_row\"><span>Удалить</span></span>\n    </Cell>\n  );\n}\n\nexport default SumCell;\n","import React from 'react';\n\nconst Row = (props) => {\n  return (\n    <tr>{props.children}</tr>\n  );\n};\n\nexport default Row;\n","import React, {useState, useRef} from 'react';\n\nimport Cell from '../cell/cell';\nimport PercentCell from '../percent-cell/percent-cell';\nimport SumCell from '../sum-cell/sum-cell';\nimport Row from '../row/row';\n\nconst Table = (props) => {\n  let amountDigitsIndex = props.amountDigits + 2;\n\n  let rowIdList = useRef([]);\n  let rowId = useRef(-1);\n  let higlighted = useRef([]);\n  let sortedCells = useRef([]);\n  let [table, setTable] = useState(generateTableData);\n  let [colsSums, setColsSums] = useState(getColsSums(props.rows, props.cols, table));\n\n  function getNextRowId() {\n    return ++rowId.current;\n  }\n\n  function generateTableData() {\n    let table = [];\n    let isFirstRender = rowId.current === -1;\n\n    for(let i = 0; i < props.rows; i++) {\n      table[i] = generateRowData(i);\n\n      if(isFirstRender) {\n        rowId.current = rowIdList.current[i] = getNextRowId();\n      }\n    }\n\n    return table;\n  }\n\n  function generateRowData(i) {\n    let row = [];\n\n    for(let j = 0; j < props.cols; j++) {\n      row[j] = generateCellData(i, j);\n    }\n\n    return row;\n  }\n\n  function generateCellData(x, y) {\n    return {\n      id: `${x}${y}`,\n      amount: generateAmount()\n    };\n  }\n\n  function generateAmount() {\n    return parseInt(Math.random()\n                      .toString()\n                      .substring(2, amountDigitsIndex)\n                    );\n  }\n\n  function calcSums(rows, cols, table) {\n    setColsSums(getColsSums(rows, cols, table));\n  }\n\n  function getColsSums(rows, colsCount, table) {\n    let cols = [];\n\n    for(let i = 0; i < colsCount; i++) {\n      cols[i] = calcSumByCol(i, table, rows);\n    }\n\n    return cols;\n  }\n\n  function calcSumByRow(row) {\n    let sumByRow = 0;\n\n    for(let i = 0; i < props.cols; i++) {\n      sumByRow += table[row][i].amount;\n    }\n\n    return sumByRow;\n  }\n\n  function calcSumByCol(col, table, rows) {\n    let sumByCol = 0;\n\n    for(let i = 0; i < rows; i++) {\n      sumByCol += table[i][col].amount;\n    }\n\n    return sumByCol;\n  }\n\n  function getPercent(index, value) {\n    return (value / calcSumByRow(index) * 100).toFixed(2);\n  }\n\n  function onRowRemove(e, row) {\n    e.preventDefault();\n\n    table.splice(row, 1);\n    rowIdList.current.splice(row, 1);\n\n    setTable(table);\n    calcSums(props.rows - 1, props.cols, table);\n\n    props.onRowRemove(e);\n  }\n\n  function onRowAdd(e, row) {\n    table[table.length] = generateRowData(table.length);\n    rowIdList.current[rowIdList.current.length] = getNextRowId();\n\n    setTable(table);\n    calcSums(props.rows + 1, props.cols, table);\n\n    props.onRowAdd(e);\n  }\n\n  function onSumCellOver(row) {\n    setTable(table => {\n      table[row].forEach((cell) => {\n        cell.over = true;\n      });\n\n      return [...table];\n    });\n  }\n\n  function onSumCellOut(row) {\n    setTable(table => {\n      table[row].forEach((cell) => {\n        cell.over = false;\n      });\n\n      return [...table];\n    });\n  }\n\n  function onCellClick(e, row, col) {\n    setTable(table => {\n      table[row][col].amount += 1;\n\n      calcSums(props.rows, props.cols, table);\n      unHiglightProcess();\n      higlightProcess(row, col);\n\n      return [...table];\n    });\n  }\n\n  function onCellOver(e, row, col) {\n    higlightProcess(row, col);\n  }\n\n  function onCellOut(e, row, col) {\n    unHiglightProcess();\n  }\n\n  function higlightProcess(cellRow, cellCol) {\n    let cellSelected = table[cellRow][cellCol];\n\n    sortedCells.current = table.reduce((cells, row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        cells.push({\n          row: rowIndex,\n          col: colIndex,\n          amountDiff: Math.abs(cellSelected.amount - cell.amount),\n          cell: cell\n        });\n      });\n\n      return cells;\n    }, []);\n\n    sortedCells.current = sortedCells.current.sort((a, b) => {\n      if(a.amountDiff < b.amountDiff) return -1;\n      if(a.amountDiff > b.amountDiff) return 1;\n      if(a.amountDiff === b.amountDiff) return 0;\n    });\n\n    higlighted.current = [];\n\n    let sortedCellsLength = sortedCells.current.length;\n\n    for(let selected = 0, i = 0; selected < props.x; i++) {\n      if(sortedCellsLength === i) return;\n\n      if(sortedCells.current[i].cell === cellSelected) continue;\n\n      higlighted.current[selected] = sortedCells.current[i];\n\n      higlightCell(sortedCells.current[i].row, sortedCells.current[i].col);\n      selected++;\n    }\n  }\n\n  function unHiglightProcess() {\n    let higlightedLength = higlighted.current.length;\n\n    for(let i = 0; i < props.x; i++) {\n      if(higlightedLength === i) return;\n\n      unHiglightCell(higlighted.current[i].row, higlighted.current[i].col);\n    }\n  }\n\n  function higlightCell(row, col) {\n    setCellHighlight(row, col, true);\n  }\n\n  function unHiglightCell(row, col) {\n    setCellHighlight(row, col, false);\n  }\n\n  function setCellHighlight(row, col, light) {\n    setTable(table => {\n      table[row][col].higlight = light;\n\n      return [...table];\n    });\n  }\n\n  let rows = [];\n\n  for(let i = 0; i < props.rows; i++) {\n    rows.push(\n      <Row key={rowIdList.current[i]}>\n        {table[i].map((cell, colIndex) =>\n          <PercentCell\n            key={colIndex}\n            percentValue={getPercent(i, cell.amount)}\n            onClick={(e) => onCellClick(e, i, colIndex)}\n            onMouseOver={(e) => onCellOver(e, i, colIndex)}\n            onMouseOut={(e) => onCellOut(e, i, colIndex)}\n            over={cell.over}\n            value={cell.amount}\n            higlight={cell.higlight}/>\n        )}\n        <SumCell\n          onMouseOver={(e) => onSumCellOver(i)}\n          onMouseOut={(e) => onSumCellOut(i)}\n          onRowRemove={(e) => onRowRemove(e, i)}\n          value={table[i].reduce((s, cell) =>  s + cell.amount, 0)}/>\n      </Row>\n    );\n  }\n\n  return (\n    <table>\n        <caption>\n          <h2>Сгенерированная таблица</h2>\n          <button className=\"table-btn\" onClick={onRowAdd}>Добавить строку</button>\n        </caption>\n        <thead></thead>\n        <tbody>\n          {rows}\n        </tbody>\n        <tfoot>\n          <Row>\n            {colsSums.map((sum, index) =>\n              <Cell key={index} value={sum}/>\n            )}\n          </Row>\n        </tfoot>\n      </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\n\nimport Table from '../table/table';\n\nconst PageTable = (props) => {\n  return (\n    <Table cols={props.cols} rows={props.rows} x={props.x}\n      amountDigits={props.amountDigits}\n      onRowAdd={props.onRowAdd}\n      onRowRemove={props.onRowRemove}/>\n  );\n};\n\nexport default PageTable;\n","import React, {useState} from 'react';\n\nimport PageCreateTable from '../page-create-table/page-create-table';\nimport PageTable from '../page-table/page-table';\n\nconst App = (props) => {\n  let [rows, setRows] = useState('');\n  let [cols, setCols] = useState('');\n  let [x, setX] = useState('');\n  let [page, setPage] = useState('CreateTable');\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    setPage('Table');\n  };\n\n  function onChange(e, name) {\n    switch(name) {\n      case 'rows': setRows(parseInt(e.target.value)); break;\n      case 'cols': setCols(parseInt(e.target.value)); break;\n      case 'x': setX(parseInt(e.target.value)); break;\n      default: break;\n    }\n  };\n\n  function onRowAdd() {\n    setRows(rows + 1);\n  };\n\n  function onRowRemove() {\n    setRows(rows - 1);\n  };\n\n  switch(page) {\n    case 'CreateTable':\n      return <PageCreateTable\n        onSubmit={onSubmit}\n        onChange={onChange}\n        values={{rows, cols, x}}/>;\n\n    case 'Table':\n      return <PageTable\n        rows={rows}\n        cols={cols}\n        x={x}\n        amountDigits={3}\n        onRowAdd={onRowAdd}\n        onRowRemove={onRowRemove}/>;\n\n    default:\n      break;\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}