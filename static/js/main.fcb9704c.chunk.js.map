{"version":3,"sources":["components/page-create-table/page-create-table.js","components/cell/cell.js","components/percent-cell/percent-cell.js","components/sum-cell/sum-cell.js","components/row/row.js","components/table-tfoot-cell/table-tfoot-cell.js","components/table-tfoot-row/table-tfoot-row.js","components/table-row-percent-cell/table-row-percent-cell.js","components/table-row-sum-cell/table-row-sum-cell.js","components/table-row/table-row.js","components/table/table-reducer.js","components/table/table.js","components/page-table/page-table.js","components/app/app.js","index.js"],"names":["PageCreateTable","props","react_default","a","createElement","className","onSubmit","onChange","e","value","values","rows","type","placeholder","cols","x","Cell","onClick","onMouseEnter","onMouseOver","onMouseLeave","onMouseOut","children","PercenterCell","highlight","over","join","style","height","concat","percentValue","cell_cell","SumCell","onRowRemove","Row","TableTfootCellMemo","React","memo","TableTfootRowMemo","row_row","cells","map","sum","index","table_tfoot_cell","key","TableRowPercentCellMemo","percent_cell","getPercent","rowIndex","amount","onCellClick","colIndex","onCellOver","onCellOut","TableRowSumCellMemo","sum_cell","onSumCellOver","onSumCellOut","sumCellValue","TableRowMemo","cell","table_row_percent_cell","table_row_sum_cell","prevProps","nextProps","reRender","markRowAsChanged","changedRows","row","current","highlightProcess","state","_ref2","col","highlighted","cellSelected","sortedCells","reduce","forEach","push","amountDiff","Math","abs","sortedCellsLength","sort","b","length","selected","i","Object","toConsumableArray","unhighlightProcess","_ref3","highlightedLength","table_reducer","action","_ref","payload","_ref4","setCellsOver","_ref5","setCellsOut","_ref7","rowIdList","nextRowId","rowData","returnState","rowAdd","_ref6","l","slice","splice","rowRemove","Error","generateAmount","digits","parseInt","random","toString","substring","Table","amountDigitsIndex","amountDigits","useRef","rowId","recalculateSums","colsSums","_useReducer","useReducer","tableReducer","table","isFirstRender","generateRowData","getNextRowId","_useReducer2","slicedToArray","dispatchTable","setRecalculateSumsTo","bool","y","j","id","calcSumByCol","sumByCol","colsCount","getColsSums","useEffect","useCallback","sumByRow","calcSumByRow","toFixed","onRowAdd","table_row","s","table_tfoot_row","PageTable","table_table","App","_useState","useState","_useState2","setRows","_useState3","_useState4","setCols","_useState5","_useState6","setX","_useState7","_useState8","page","setPage","page_create_table","preventDefault","name","target","page_table","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.fcb9704c.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageCreateTable = (props) => {\n  return (\n      <div className=\"page-create-table\">\n        <h1>Построить таблицу</h1>\n\n        <form onSubmit={props.onSubmit}>\n          <input\n            onChange={(e) => props.onChange(e, 'rows')}\n            value={props.values.rows}\n            type=\"number\"\n            placeholder=\"Введите количество строк\" />\n\n          <input\n            onChange={(e) => props.onChange(e, 'cols')}\n            value={props.values.cols}\n            type=\"number\"\n            placeholder=\"Введите количество столбцов\" />\n\n          <input\n            onChange={(e) => props.onChange(e, 'x')}\n            value={props.values.x}\n            type=\"number\"\n            placeholder=\"Введите число X\" />\n\n          <input type=\"submit\" value=\"Построить\" />\n        </form>\n      </div>\n    );\n};\n\nexport default PageCreateTable;\n","import React from 'react';\n\nconst Cell = (props) => {\n  return <td className={props.className}\n             onClick={props.onClick}\n             onMouseEnter={props.onMouseOver}\n             onMouseLeave={props.onMouseOut}>\n              <span className=\"amount\">{props.value}</span>\n              {props.children}\n         </td>;\n}\n\nexport default Cell;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst PercenterCell = (props) => {\n  let className = [\n    props.highlight ? 'highlight' : '',\n    props.over ? 'over' : ''\n  ].join(' ');\n\n  let style = {\n    height: `${props.percentValue}%`\n  };\n\n  return (\n    <Cell className={className} value={props.value}\n    onClick={props.onClick}\n    onMouseOver={props.onMouseOver}\n    onMouseOut={props.onMouseOut}>\n      <span className=\"percent_value\">{props.percentValue}%</span>\n      <div className=\"percent\" style={style}></div>\n    </Cell>\n  );\n}\n\nexport default PercenterCell;\n\n//   shouldComponentUpdate(nextProps, nextState) {\n//     if(nextProps.higlight === this.props.higlight\n//       && nextProps.value === this.props.value\n//       && nextProps.percentValue === this.props.percentValue\n//       && nextProps.over === this.props.over\n//     )  {\n//       return false;\n//     }\n//\n//     return true;\n//   }\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst SumCell = (props) => {\n  return (\n    <Cell className=\"sum_cell\" value={props.value}\n      onMouseOver={props.onMouseOver}\n      onMouseOut={props.onMouseOut}>\n      <span onClick={props.onRowRemove} className=\"delete_row\"><span>Удалить</span></span>\n    </Cell>\n  );\n}\n\nexport default SumCell;\n","import React from 'react';\n\n// const CustomReactMemo = (component) => {\n//   const inner = {props: null, component: null};\n//\n//   return (props) => {\n//     if(true && inner.component !== null) return inner.component;\n//\n//     inner.props = props;\n//     inner.component = component(props);\n//\n//     return inner.component;\n//   };\n// };\n//\n// const Row = CustomReactMemo((props) => {\n//   return (\n//     <tr>{props.children}</tr>\n//   );\n// });\n\nconst Row = (props) => {\n  return (\n    <tr>{props.children}</tr>\n  );\n};\n\nexport default Row;\n","import React from 'react';\n\nimport Cell from '../cell/cell';\n\nconst TableTfootCell = (props) => {\n  return (\n    <Cell value={props.value} />\n  );\n};\n\nconst TableTfootCellMemo = React.memo(TableTfootCell);\n\nexport default TableTfootCellMemo;\n","import React from 'react';\n\nimport Row from '../row/row';\nimport TableTfootCell from '../table-tfoot-cell/table-tfoot-cell';\n\nconst TableTfootRow = (props) => {\n  return (\n    <Row>\n      {props.cells.map((sum, index) =>\n        <TableTfootCell key={index} value={sum}/>\n      )}\n    </Row>\n  );\n};\n\nconst TableTfootRowMemo = React.memo(TableTfootRow);\n\nexport default TableTfootRowMemo;\n","import React from 'react';\n\nimport PercentCell from '../percent-cell/percent-cell';\n\nconst TableRowPercentCell = (props) => {\n  return (\n    <PercentCell\n      percentValue={props.getPercent(props.rowIndex, props.amount)}\n      onClick={(e) => props.onCellClick(e, props.rowIndex, props.colIndex)}\n      onMouseOver={(e) => props.onCellOver(e, props.rowIndex, props.colIndex)}\n      onMouseOut={(e) => props.onCellOut(e, props.rowIndex, props.colIndex)}\n      over={props.over}\n      value={props.amount}\n      highlight={props.highlight}\n      />\n  );\n};\n\nconst TableRowPercentCellMemo = React.memo(TableRowPercentCell);\n\nexport default TableRowPercentCellMemo;\n","import React from 'react';\n\nimport SumCell from '../sum-cell/sum-cell';\n\nconst TableRowSumCell = (props) => {\n  return (\n    <SumCell\n      onMouseOver={(e) => props.onSumCellOver(props.index)}\n      onMouseOut={(e) => props.onSumCellOut(props.index)}\n      onRowRemove={(e) => props.onRowRemove(e, props.index)}\n      value={props.sumCellValue}\n      />\n  );\n};\n\nconst TableRowSumCellMemo = React.memo(TableRowSumCell);\n\nexport default TableRowSumCellMemo;\n","import React from 'react';\n\nimport TableRowPercentCell from '../table-row-percent-cell/table-row-percent-cell';\nimport TableRowSumCell from '../table-row-sum-cell/table-row-sum-cell';\n\nconst reRenderOrNot = (prevProps, nextProps) => {\n  return !nextProps.reRender;\n};\n\nconst TableRow = (props) => {\n  return (\n    <tr>\n      {props.cells.map((cell, colIndex) =>\n\n          <TableRowPercentCell\n            key={colIndex}\n            rowIndex={props.index}\n            colIndex={colIndex}\n            getPercent={props.getPercent}\n            onCellClick={props.onCellClick}\n            onCellOver={props.onCellOver}\n            onCellOut={props.onCellOut}\n            over={cell.over}\n            amount={cell.amount}\n            highlight={cell.highlight}/>\n        )}\n\n        <TableRowSumCell\n          index={props.index}\n          onSumCellOver={props.onSumCellOver}\n          onSumCellOut={props.onSumCellOut}\n          onRowRemove={props.onRowRemove}\n          sumCellValue={props.sumCellValue}\n          />\n    </tr>\n  );\n}\n\nconst TableRowMemo = React.memo(TableRow, reRenderOrNot);\n\nexport default TableRowMemo;\n","import React from 'react';\n\n// MUTABLE\nconst onCellClick = (state, {row, col, changedRows}) => {\n  markRowAsChanged(changedRows, row);\n\n  state[row][col].amount += 1;\n\n  return [...state];\n};\n\n// MUTABLE\nconst markRowAsChanged = (changedRows, row) => {\n  changedRows.current[row] = true;\n};\n\n// MUTABLE\nconst highlightProcess = (state, {row, col, highlighted, x, changedRows}) => {\n  let cellSelected = state[row][col];\n\n  let sortedCells = state.reduce((cells, row, rowIndex) => {\n    row.forEach((cell, colIndex) => {\n      cells.push({\n        row: rowIndex,\n        col: colIndex,\n        amountDiff: Math.abs(cellSelected.amount - cell.amount),\n        cell: cell\n      });\n    });\n\n    return cells;\n  }, []);\n\n  sortedCells = sortedCells.sort((a, b) => {\n    if(a.amountDiff < b.amountDiff) return -1;\n    if(a.amountDiff > b.amountDiff) return 1;\n    if(a.amountDiff === b.amountDiff) return 0;\n  });\n\n  let sortedCellsLength = sortedCells.length;\n\n  for(let selected = 0, i = 0; selected < x; i++) {\n    if(sortedCellsLength === i) break;\n    if(sortedCells[i].cell === cellSelected) continue;\n\n    highlighted.current[selected] = sortedCells[i];\n\n    markRowAsChanged(changedRows, sortedCells[i].row);\n    state[sortedCells[i].row][sortedCells[i].col].highlight = true;\n    selected++;\n  }\n\n  return [...state];\n}\n\n// MUTABLE\nconst unhighlightProcess = (state, {highlighted, x, changedRows}) => {\n  let highlightedLength = highlighted.current.length;\n\n  for(let i = 0; i < x; i++) {\n    if(highlightedLength === i) break;\n\n    markRowAsChanged(changedRows, highlighted.current[i].row);\n    state[highlighted.current[i].row][highlighted.current[i].col].highlight = false;\n  }\n\n  highlighted.current = [];\n\n  return [...state];\n}\n\n// MUTABLE\nconst setCellsOver = (state, {row, changedRows}) => {\n  markRowAsChanged(changedRows, row);\n\n  state[row].forEach((cell) => {\n    cell.over = true;\n  });\n\n  return [...state];\n};\n\n// MUTABLE\nconst setCellsOut = (state, {row, changedRows}) => {\n  markRowAsChanged(changedRows, row);\n\n  state[row].forEach((cell) => {\n    cell.over = false;\n  });\n\n  return [...state];\n};\n\n// MUTABLE\nconst rowRemove = (state, {e, row, rowIdList, changedRows}) => {\n  for(let i = row, l = state.length; i < l; i++) {\n    markRowAsChanged(changedRows, i);\n  }\n\n  const returnState = [...state.slice(0, row), ...state.slice(row + 1)];\n  rowIdList.current.splice(row, 1);\n  // calcSums(props.rows - 1, props.cols, table);\n\n  return returnState;\n};\n\n// MUTABLE\nconst rowAdd = (state, {e, rowIdList, nextRowId, rowData}) => {\n  const returnState = [...state, rowData];\n  rowIdList.current[rowIdList.current.length] = nextRowId;\n\n  return returnState;\n  // calcSums(props.rows + 1, props.cols, table);\n};\n\nexport default (state, action) => {\n  switch(action.type) {\n    case 'cell-click':\n      return highlightProcess(\n        unhighlightProcess(\n          onCellClick(state, action.payload), action.payload\n        ), action.payload\n      );\n\n    case 'cell-over':\n      return highlightProcess(\n        unhighlightProcess(state, action.payload), action.payload\n      );\n\n    case 'cell-out':\n      return unhighlightProcess(state, action.payload);\n\n    case 'sum-cell-over':\n      return setCellsOver(state, action.payload);\n\n    case 'sum-cell-out':\n      return setCellsOut(state, action.payload);\n\n    case 'row-add':\n      return rowAdd(state, action.payload);\n\n    case 'row-remove':\n      return rowRemove(state, action.payload);\n\n    default:\n      throw new Error('action.type should be exist');\n  }\n};\n","import React, {useState, useRef, useCallback, useReducer, useMemo, useEffect} from 'react';\n\nimport PercentCell from '../percent-cell/percent-cell';\nimport SumCell from '../sum-cell/sum-cell';\nimport TableTfootRow from '../table-tfoot-row/table-tfoot-row';\nimport TableRow from '../table-row/table-row';\n\nimport tableReducer from './table-reducer';\n\nfunction generateAmount(digits) {\n  return parseInt(Math.random()\n                    .toString()\n                    .substring(2, digits)\n                  );\n}\n\nfunction generateCellData(x, y, digits) {\n  return {\n    id: `${x}_${y}`,\n    amount: generateAmount(digits)\n  };\n}\n\nfunction unmarkChangedRows(rows) {\n  return rows.map(() => false);\n}\n\nconst Table = (props) => {\n  let amountDigitsIndex = props.amountDigits + 2;\n\n  let rowIdList = useRef([]);\n  let rowId = useRef(-1);\n  let highlighted = useRef([]);\n  let changedRows = useRef([]);\n  let recalculateSums = useRef(true);\n  let colsSums = useRef(null);\n  let [table, dispatchTable] = useReducer(tableReducer, null, generateTableData);\n\n  if(recalculateSums.current) {\n    colsSums.current = getColsSums(props.rows, props.cols, table);\n  }\n\n  useEffect(() => {\n    changedRows.current = unmarkChangedRows(changedRows.current);\n  });\n\n  useEffect(() => {\n    recalculateSums.current = false;\n  });\n\n  function isChangedRow(row) {\n    return changedRows.current[row];\n  }\n\n  function setRecalculateSumsTo(bool) {\n    recalculateSums.current = bool;\n  }\n\n  function getNextRowId() {\n    return ++rowId.current;\n  }\n\n  function generateTableData() {\n    let table = [];\n    let isFirstRender = rowId.current === -1;\n\n    for(let i = 0; i < props.rows; i++) {\n      table[i] = generateRowData(i);\n\n      if(isFirstRender) {\n        rowId.current = rowIdList.current[i] = getNextRowId();\n      }\n    }\n\n    return table;\n  }\n\n  function generateRowData(i) {\n    let row = [];\n\n    for(let j = 0; j < props.cols; j++) {\n      row[j] = generateCellData(i, j, amountDigitsIndex);\n    }\n\n    return row;\n  }\n\n  function getColsSums(rows, colsCount, table) {\n    let cols = [];\n\n    for(let i = 0; i < colsCount; i++) {\n      cols[i] = calcSumByCol(i, table, rows);\n    }\n\n    return cols;\n  }\n\n  function calcSumByRow(row, table, cols) {\n    let sumByRow = 0;\n\n    for(let i = 0; i < cols; i++) {\n      sumByRow += table[row][i].amount;\n    }\n\n    return sumByRow;\n  }\n\n  function calcSumByCol(col, table, rows) {\n    let sumByCol = 0;\n\n    for(let i = 0; i < rows; i++) {\n      sumByCol += table[i][col].amount;\n    }\n\n    return sumByCol;\n  }\n\n  const getPercent = useCallback((index, value) => {\n    return (value / calcSumByRow(index, table, props.cols) * 100).toFixed(2);\n  }, [props.rows, props.cols]);\n\n  const onRowAdd = useCallback((e) => {\n    setRecalculateSumsTo(true);\n\n    dispatchTable({\n      type: 'row-add',\n      payload: {\n        e: e,\n        rowIdList: rowIdList,\n        rowData: generateRowData(table.length),\n        nextRowId: getNextRowId()\n      }\n    });\n\n    props.onRowAdd(e);\n  }, []);\n\n  const onRowRemove = useCallback((e, row) => {\n    setRecalculateSumsTo(true);\n\n    dispatchTable({\n      type: 'row-remove',\n      payload: {\n        e: e,\n        row: row,\n        rowIdList: rowIdList,\n        changedRows: changedRows\n      }\n    });\n\n    props.onRowRemove(e);\n  }, []);\n\n  const onSumCellOver = useCallback((row) => {\n    dispatchTable({\n      type: 'sum-cell-over',\n      payload: {\n        row: row,\n        changedRows: changedRows\n      }\n    });\n  }, []);\n\n  const onSumCellOut = useCallback((row) => {\n    dispatchTable({\n      type: 'sum-cell-out',\n      payload: {\n        row: row,\n        changedRows: changedRows\n      }\n    });\n  }, []);\n\n  const onCellClick = useCallback((e, row, col) => {\n    setRecalculateSumsTo(true);\n\n    dispatchTable({\n      type: 'cell-click',\n      payload: {\n        row: row,\n        col: col,\n        highlighted: highlighted,\n        x: props.x,\n        changedRows: changedRows\n      }\n    });\n  }, []);\n\n  const onCellOver = useCallback((e, row, col) => {\n    dispatchTable({\n      type: 'cell-over',\n      payload: {\n        e: e,\n        row: row,\n        col: col,\n        x: props.x,\n        highlighted: highlighted,\n        changedRows: changedRows\n      }\n    });\n  }, [props.x]);\n\n  const onCellOut = useCallback((e, row, col) => {\n    dispatchTable({\n      type: 'cell-out',\n      payload: {\n        e: e,\n        row: row,\n        col: col,\n        x: props.x,\n        highlighted: highlighted,\n        changedRows: changedRows\n      }\n    });\n  }, [props.x]);\n\n  let rows = [];\n\n  for(let i = 0; i < props.rows; i++) {\n      rows.push(\n        <TableRow\n          index={i}\n          cells={table[i]}\n          key={rowIdList.current[i]}\n\n          reRender={isChangedRow(i)}\n\n          getPercent={getPercent}\n          onCellClick={onCellClick}\n          onCellOver={onCellOver}\n          onCellOut={onCellOut}\n\n          onSumCellOver={onSumCellOver}\n          onSumCellOut={onSumCellOut}\n          onRowRemove={onRowRemove}\n          sumCellValue={table[i].reduce((s, cell) =>  s + cell.amount, 0)}\n          />\n      );\n    }\n\n  return (\n    <table>\n        <caption>\n          <h2>Сгенерированная таблица</h2>\n          <button className=\"table-btn\" onClick={onRowAdd}>Добавить строку</button>\n        </caption>\n        <thead></thead>\n        <tbody>\n          {rows}\n        </tbody>\n        <tfoot>\n          <TableTfootRow cells={colsSums.current} />\n        </tfoot>\n      </table>\n  );\n};\n\nexport default Table;\n","import React from 'react';\n\nimport Table from '../table/table';\n\nconst PageTable = (props) => {\n  return (\n    <Table cols={props.cols} rows={props.rows} x={props.x}\n      amountDigits={props.amountDigits}\n      onRowAdd={props.onRowAdd}\n      onRowRemove={props.onRowRemove}/>\n  );\n};\n\nexport default PageTable;\n","import React, {useState} from 'react';\n\nimport PageCreateTable from '../page-create-table/page-create-table';\nimport PageTable from '../page-table/page-table';\n\nconst App = (props) => {\n  let [rows, setRows] = useState('');\n  let [cols, setCols] = useState('');\n  let [x, setX] = useState('');\n  let [page, setPage] = useState('CreateTable');\n\n  function onSubmit (e) {\n    e.preventDefault();\n\n    setPage('Table');\n  }\n\n  function onChange(e, name) {\n    switch(name) {\n      case 'rows': setRows(parseInt(e.target.value)); break;\n      case 'cols': setCols(parseInt(e.target.value)); break;\n      case 'x': setX(parseInt(e.target.value)); break;\n      default: break;\n    }\n  }\n\n  // ??? КАК ??? Здесь rows === 5, 6, 7, 8 ...\n  const onRowAdd = () => {\n    // А здесь rows === 5 всегда\n    setRows(state => state + 1);\n  };\n\n  function onRowRemove() {\n    setRows(state => state - 1);\n  };\n\n  switch(page) {\n    case 'CreateTable':\n      return <PageCreateTable\n        onSubmit={onSubmit}\n        onChange={onChange}\n        values={{rows, cols, x}}/>;\n\n    case 'Table':\n      return <PageTable\n        rows={rows}\n        cols={cols}\n        x={x}\n        amountDigits={3}\n        onRowAdd={onRowAdd}\n        onRowRemove={onRowRemove}/>;\n\n    default:\n      break;\n  }\n};\n\nexport default App;\n","import React, {useState, useCallback} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}