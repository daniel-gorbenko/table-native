{"version":3,"sources":["components/page-create-table/page-create-table.js","components/cell/cell.js","components/percent-cell/percent-cell.js","components/sum-cell/sum-cell.js","components/row/row.js","components/table-row-percent-cell/table-row-percent-cell.js","components/table-row-sum-cell/table-row-sum-cell.js","components/table-row/table-row.js","components/table/table.js","components/page-table/page-table.js","components/app/app.js","index.js"],"names":["PageCreateTable","props","react_default","a","createElement","onSubmit","onChange","e","value","values","rows","type","placeholder","cols","x","Cell","className","onClick","onMouseEnter","onMouseOver","onMouseLeave","onMouseOut","children","PercentCell","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","higlight","over","join","style","height","percentValue","cell_cell","React","Component","SumCell","onRowRemove","Row","nextProps","changed","TableRowPercentCell","amount","_this","percent_cell","getPercent","rowIndex","onCellClick","colIndex","onCellOver","onCellOut","TableRowSumCell","sum_cell","onSumCellOver","index","onSumCellOut","sumCellValue","TableRow","cells","map","cell","table_row_percent_cell","key","table_row_sum_cell","Table","_React$Component","calcSumByRow","state","table","toFixed","onRowAdd","preventDefault","setState","toConsumableArray","length","generateRowData","rowIdList","getNextRowId","rowChanges","sums","getSums","row","splice","i","l","markChangedRows","amountDigitsIndex","amountDigits","_currentRowId","generateTableData","bind","assertThisInitialized","inherits","createClass","j","generateCellData","y","id","replace","generateAmount","parseInt","Math","random","toString","substring","getRowsSums","getColsSums","rowsCount","colsCount","calcSumByCol","tbl","sumByRow","col","sumByCol","_this2","newTableState","assign","unHiglightProcess","higlightProcess","cellRow","cellCol","cellSelected","sortedCells","reduce","forEach","push","amountDiff","abs","sort","b","higlighted","sortedCellsLength","selected","higlightCell","higlightedLength","unHiglightCell","setCellHighlight","light","table_row","s","href","row_row","sum","unmarkChangedRows","PageTable","table_table","App","togglePage","page","name","defineProperty","target","cb","page_create_table","page_table","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.10ef391b.chunk.js","sourcesContent":["import React from 'react';\n\nconst PageCreateTable = (props) => {\n  return (\n      <div>\n        <h1>Построить таблицу</h1>\n\n        <form onSubmit={props.onSubmit}>\n          <input onChange={(e) => props.onChange(e, 'rows')} value={props.values.rows} type=\"number\" placeholder=\"Введите количество строк\" />\n          <input onChange={(e) => props.onChange(e, 'cols')} value={props.values.cols} type=\"number\" placeholder=\"Введите количество столбцов\" />\n          <input onChange={(e) => props.onChange(e, 'x')} value={props.values.x} type=\"number\" placeholder=\"Введите число X\" />\n\n          <input type=\"submit\" value=\"Построить\" />\n        </form>\n      </div>\n    );\n};\n\nexport default PageCreateTable;\n","import React from 'react';\n\nconst Cell = (props) => {\n  return <td className={props.className}\n             onClick={props.onClick}\n             onMouseEnter={props.onMouseOver}\n             onMouseLeave={props.onMouseOut}>\n              <span className=\"amount\">{props.value}</span>\n              {props.children}\n         </td>;\n};\n\nexport default  Cell;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nclass PercentCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let classes = [\n      this.props.higlight ? 'higlight' : '',\n      this.props.over ? 'over' : ''\n    ];\n\n    let className = classes.join(' ');\n\n    let style = {\n      height: this.props.percentValue + '%'\n    };\n\n    return (\n      <Cell className={className} value={this.props.value}\n      onClick={this.props.onClick}\n      onMouseOver={this.props.onMouseOver}\n      onMouseOut={this.props.onMouseOut}>\n        <span className=\"percent_value\">{this.props.percentValue}%</span>\n        <div className=\"percent\" style={style}></div>\n      </Cell>\n    );\n  }\n};\n\nexport default PercentCell;\n","import Cell from '../cell/cell';\n\nimport React from 'react';\n\nconst SumCell = (props) => {\n  return (\n    <Cell className=\"sum_cell\" value={props.value}\n      onMouseOver={props.onMouseOver}\n      onMouseOut={props.onMouseOut}>\n      <span onClick={props.onRowRemove} className=\"delete_row\"><span>Удалить</span></span>\n    </Cell>\n  );\n};\n\nexport default SumCell;\n","import React from 'react';\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.changed;\n  }\n\n  render() {\n    return (\n      <tr>{this.props.children}</tr>\n    );\n  }\n}\n\n// const Row = (props) => {\n//   return (\n//     <tr>{props.children}</tr>\n//   );\n// };\n\nexport default Row;\n","import React from 'react';\n\nimport PercentCell from '../percent-cell/percent-cell';\n\nclass TableRowPercentCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if(nextProps.higlight === this.props.higlight\n      && nextProps.amount === this.props.amount\n      && nextProps.over === this.props.over\n    )  {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    return (\n      <PercentCell\n        percentValue={this.props.getPercent(this.props.rowIndex, this.props.amount)}\n        onClick={(e) => this.props.onCellClick(e, this.props.rowIndex, this.props.colIndex)}\n        onMouseOver={(e) => this.props.onCellOver(e, this.props.rowIndex, this.props.colIndex)}\n        onMouseOut={(e) => this.props.onCellOut(e, this.props.rowIndex, this.props.colIndex)}\n        over={this.props.over}\n        value={this.props.amount}\n        higlight={this.props.higlight}\n        />\n    );\n  }\n};\n\nexport default TableRowPercentCell;\n","import React from 'react';\n\nimport SumCell from '../sum-cell/sum-cell';\n\nclass TableRowSumCell extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <SumCell\n        onMouseOver={(e) => this.props.onSumCellOver(this.props.index)}\n        onMouseOut={(e) => this.props.onSumCellOut(this.props.index)}\n        onRowRemove={(e) => this.props.onRowRemove(e, this.props.index)}\n        value={this.props.sumCellValue}\n        />\n    );\n  }\n};\n\nexport default TableRowSumCell;\n","import React from 'react';\n\nimport TableRowPercentCell from '../table-row-percent-cell/table-row-percent-cell';\nimport TableRowSumCell from '../table-row-sum-cell/table-row-sum-cell';\n\nclass TableRow extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return nextProps.changed;\n  }\n\n  render() {\n    return (\n      <tr>\n        {this.props.cells.map((cell, colIndex) =>\n\n            <TableRowPercentCell\n              key={colIndex}\n              rowIndex={this.props.index}\n              colIndex={colIndex}\n              getPercent={this.props.getPercent}\n              onCellClick={this.props.onCellClick}\n              onCellOver={this.props.onCellOver}\n              onCellOut={this.props.onCellOut}\n              over={cell.over}\n              amount={cell.amount}\n              higlight={cell.higlight}/>\n          )}\n\n          <TableRowSumCell\n            index={this.props.index}\n            onSumCellOver={this.props.onSumCellOver}\n            onSumCellOut={this.props.onSumCellOut}\n            onRowRemove={this.props.onRowRemove}\n            sumCellValue={this.props.sumCellValue}\n            />\n      </tr>\n    );\n  }\n}\n\nexport default TableRow;\n","import React from 'react';\n\nimport Cell from '../cell/cell';\nimport PercentCell from '../percent-cell/percent-cell';\nimport SumCell from '../sum-cell/sum-cell';\nimport Row from '../row/row';\nimport TableRow from '../table-row/table-row';\n\nconst Table = class Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.amountDigitsIndex = props.amountDigits + 2;\n\n    this.rowIdList = [];\n    this.rowChanges = [];\n    this._currentRowId = -1;\n\n    this.state = {\n      table: this.generateTableData()\n    };\n\n    this.state.sums = this.getSums(this.state.table, props.rows, props.cols);\n\n    this.getPercent= this.getPercent.bind(this);\n    this.onCellClick= this.onCellClick.bind(this);\n    this.onCellOver= this.onCellOver.bind(this);\n    this.onCellOut= this.onCellOut.bind(this);\n\n    this.onSumCellOver= this.onSumCellOver.bind(this);\n    this.onSumCellOut= this.onSumCellOut.bind(this);\n    this.onRowRemove= this.onRowRemove.bind(this);\n  }\n\n  getNextRowId() {\n    return ++this._currentRowId;\n  }\n\n  generateTableData() {\n    let table = [];\n\n    for(let i = 0; i < this.props.rows; i++) {\n      table[i] = this.generateRowData(i);\n      this.rowIdList[i] = this.getNextRowId();\n      this.rowChanges[i] = true;\n    }\n\n    return table;\n  }\n\n  generateRowData(i) {\n    let row = [];\n\n    for(let j = 0; j < this.props.cols; j++) {\n      row[j] = this.generateCellData(i, j);\n    }\n\n    return row;\n  }\n\n  generateCellData(x, y) {\n    let idTemplate = 'x_y';\n\n    return {\n      id: idTemplate.replace('x', x).replace('y', y),\n      amount: this.generateAmount()\n    };\n  }\n\n  generateAmount() {\n    return parseInt(Math.random()\n                      .toString()\n                      .substring(2, this.amountDigitsIndex)\n                    );\n  }\n\n  getSums(table, rows, cols) {\n    return {\n      rows: this.getRowsSums(table, rows, cols),\n      cols: this.getColsSums(table, rows, cols)\n    };\n  }\n\n  getRowsSums(table, rowsCount, colsCount) {\n    let rows = [];\n\n    for(let i = 0; i < rowsCount; i++) {\n      rows[i] = this.calcSumByRow(i, table, colsCount);\n    }\n\n    return rows;\n  }\n\n  getColsSums(table, rowsCount, colsCount) {\n    let cols = [];\n\n    for(let i = 0; i < colsCount; i++) {\n      cols[i] = this.calcSumByCol(i, table, rowsCount);\n    }\n\n    return cols;\n  }\n\n  calcSumByRow(row, table, colsCount) {\n    let tbl = table || this.state.table;\n\n    let sumByRow = 0;\n\n    for(let i = 0; i < colsCount; i++) {\n      sumByRow += tbl[row][i].amount;\n    }\n\n    return sumByRow;\n  }\n\n  calcSumByCol(col, table, rowsCount) {\n    let tbl = table || this.state.table;\n\n    let sumByCol = 0;\n\n    for(let i = 0; i < rowsCount; i++) {\n      sumByCol += tbl[i][col].amount;\n    }\n\n    return sumByCol;\n  }\n\n  markChangedRows(row) {\n    this.rowChanges[row] = true;\n  }\n\n  unmarkChangedRows() {\n    this.rowChanges = this.rowChanges.map(() => false);\n  }\n\n  onCellClick(e, row, col) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      let newTableState = [...this.state.table];\n      newTableState[row] = [...newTableState[row]];\n      newTableState[row][col] = Object.assign({}, newTableState[row][col], {\n        amount: newTableState[row][col].amount + 1\n      });\n\n      return {table: newTableState, sums: this.getSums(newTableState, this.props.rows, this.props.cols)};\n    }, () => {\n      this.unHiglightProcess();\n      this.higlightProcess(row, col);\n    });\n\n\n  }\n\n  onCellOver(e, row, col) {\n    this.higlightProcess(row, col);\n  }\n\n  onCellOut(e, row, col) {\n    this.unHiglightProcess();\n  }\n\n  higlightProcess(cellRow, cellCol) {\n    let cellSelected = this.state.table[cellRow][cellCol];\n\n    this.sortedCells = this.state.table.reduce((cells, row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        cells.push({\n          row: rowIndex,\n          col: colIndex,\n          amountDiff: Math.abs(cellSelected.amount - cell.amount),\n          cell: cell\n        });\n      });\n\n      return cells;\n    }, []);\n\n    this.sortedCells = this.sortedCells.sort((a, b) => {\n      if(a.amountDiff < b.amountDiff) return -1;\n      if(a.amountDiff > b.amountDiff) return 1;\n      if(a.amountDiff === b.amountDiff) return 0;\n    });\n\n    this.higlighted = [];\n\n    let sortedCellsLength = this.sortedCells.length;\n\n    for(let selected = 0, i = 0; selected < this.props.x; i++) {\n      if(sortedCellsLength === i) return;\n      if(this.sortedCells[i].cell === cellSelected) continue;\n\n      this.higlighted[selected] = this.sortedCells[i];\n\n      this.higlightCell(this.sortedCells[i].row, this.sortedCells[i].col);\n      selected++;\n    }\n  }\n\n  unHiglightProcess() {\n    let higlightedLength = this.higlighted.length;\n\n    for(let i = 0; i < this.props.x; i++) {\n      if(higlightedLength === i) return;\n      this.unHiglightCell(this.higlighted[i].row, this.higlighted[i].col);\n    }\n  }\n\n  higlightCell(row, col) {\n    this.setCellHighlight(row, col, true);\n  }\n\n  unHiglightCell(row, col) {\n    this.setCellHighlight(row, col, false);\n  }\n\n  setCellHighlight(row, col, light) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      state.table[row][col].higlight = light;\n\n      return state;\n    });\n  }\n\n  getPercent = (index, value) => {\n    return (value / this.calcSumByRow(index, this.state.table, this.props.cols) * 100).toFixed(2);\n  }\n\n  onSumCellOver(row) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      state.table[row].forEach((cell) => {\n        cell.over = true;\n      });\n\n      return {};\n    });\n  }\n\n  onSumCellOut(row) {\n    this.markChangedRows(row);\n\n    this.setState(state => {\n      state.table[row].forEach((cell) => {\n        cell.over = false;\n      });\n\n      return {};\n\n    });\n  }\n\n  onRowAdd = (e) => {\n    e.preventDefault();\n\n    this.setState(state => {\n\n      let table = [...state.table];\n\n      table[table.length] = this.generateRowData(state.table.length);\n      this.rowIdList[this.rowIdList.length] = this.getNextRowId();\n      this.rowChanges[this.rowChanges.length] = true;\n\n      return {table: table, sums: this.getSums(table, table.length, this.props.cols)};\n    });\n\n    this.props.onRowAdd(e);\n  }\n\n  onRowRemove = (e, row) => {\n    e.preventDefault();\n\n    this.props.onRowRemove(e);\n\n    this.setState(state => {\n\n      let table = [...state.table];\n\n      table.splice(row, 1);\n      this.rowIdList.splice(row, 1);\n      this.rowChanges.splice(row, 1);\n\n      for(let i = row, l = table.length; i < l; i++) {\n        this.markChangedRows(i);\n      }\n\n      return {table: table, sums: this.getSums(table, table.length, this.props.cols)};\n    });\n  }\n\n  render() {\n    let rows = [];\n\n    for(let i = 0; i < this.props.rows; i++) {\n      rows.push(\n        <TableRow\n          index={i}\n          cells={this.state.table[i]}\n          key={this.rowIdList[i]}\n          changed={this.rowChanges[i]}\n\n          getPercent={this.getPercent}\n          onCellClick={this.onCellClick}\n          onCellOver={this.onCellOver}\n          onCellOut={this.onCellOut}\n\n          onSumCellOver={this.onSumCellOver}\n          onSumCellOut={this.onSumCellOut}\n          onRowRemove={this.onRowRemove}\n          sumCellValue={this.state.table[i].reduce((s, cell) =>  s + cell.amount, 0)}\n          />\n      );\n    }\n\n    return (\n      <table>\n        <caption>\n          <h2>Сгенерированная таблица</h2>\n          <a href=\"#\" className=\"table-btn\" onClick={this.onRowAdd}>Добавить строку</a>\n        </caption>\n        <thead></thead>\n        <tbody>\n          {rows}\n        </tbody>\n        <tfoot>\n          <Row changed={true}>\n            {this.state.sums.cols.map((sum, index) =>\n              <Cell key={index} value={sum}/>\n            )}\n          </Row>\n        </tfoot>\n      </table>\n    );\n  }\n\n  componentDidUpdate() {\n    this.unmarkChangedRows();\n  }\n\n  componentDidMount() {\n    this.unmarkChangedRows();\n  }\n};\n\nexport default Table;\n","import React from 'react';\n\nimport Table from '../table/table';\n\nconst PageTable = (props) => {\n  return (\n    <Table cols={props.cols} rows={props.rows} x={props.x}\n      amountDigits={props.amountDigits}\n      onRowAdd={props.onRowAdd}\n      onRowRemove={props.onRowRemove}/>\n  );\n};\n\nexport default PageTable;\n","import React from 'react';\n\nimport PageCreateTable from '../page-create-table/page-create-table';\nimport PageTable from '../page-table/page-table';\n\nconst App = class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      values: {\n        rows: '',\n        cols: '',\n        x: ''\n      },\n      page: 'CreateTable'\n    };\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    this.togglePage('Table');\n  }\n\n  togglePage = (page) => {\n    this.setState({\n      page: page\n    });\n  }\n\n  onChange = (e, name) => {\n    this.setState({\n      values: Object.assign({}, this.state.values, {\n        [name]: parseInt(e.target.value)\n      })\n    });\n  }\n\n  onRowAdd = (e) => {\n    this.setState((state, cb) => {\n      return {values: Object.assign({}, state.values, {rows: state.values.rows + 1})};\n    });\n  }\n\n  onRowRemove = (e) => {\n    this.setState((state, cb) => {\n      return {values: Object.assign({}, state.values, {rows: state.values.rows - 1})};\n    });\n  }\n\n  render() {\n    let page;\n\n    switch(this.state.page) {\n      case 'CreateTable': page = <PageCreateTable\n        onSubmit={this.onSubmit}\n        onChange={this.onChange}\n        values={this.state.values}/>;\n        break;\n      case 'Table': page = <PageTable\n        rows={this.state.values.rows}\n        cols={this.state.values.cols}\n        x={this.state.values.x}\n        amountDigits={3}\n        onRowAdd={this.onRowAdd}\n        onRowRemove={this.onRowRemove}\n        />;\n        break;\n      default: break;\n    }\n\n    return page;\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}